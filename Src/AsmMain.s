.syntax unified

.EQU RCC_BASE,    0x40023800
.EQU RCC_CR,	  RCC_BASE + 0x00
.EQU RCC_PLLCFGR, RCC_BASE + 0x04
.EQU RCC_CFGR,	  RCC_BASE + 0x08
.EQU RCC_AHB1ENR, RCC_BASE + 0x30
.EQU RCC_APB1ENR, RCC_BASE + 0x40
.EQU RCC_APB2ENR, RCC_BASE + 0x44

.EQU GPIOA_BASE,  0x40020000
.EQU GPIOA_MODER, GPIOA_BASE+0x00
.EQU GPIOA_ODR,   GPIOA_BASE+0x14

.EQU GPIOB_BASE,  0x40020400
.EQU GPIOB_MODER, GPIOB_BASE+0x00
.EQU GPIOB_PUPDR, GPIOB_BASE+0x0C

.EQU SCB_AIRCR,	  0xE000ED0C
.EQU NVIC_BASE,   0xE000E100
.EQU NVIC_ISER0,  NVIC_BASE
.EQU NVIC_IPR0,	  NVIC_BASE + 0x300
.EQU NVIC_IPR1,   NVIC_IPR0 + 0x04
.EQU NVIC_IPR2,   NVIC_IPR1 + 0x04
.EQU NVIC_IPR3,   NVIC_IPR2 + 0x04
.EQU NVIC_IPR4,   NVIC_IPR3 + 0x04
.EQU NVIC_IPR5,   NVIC_IPR4 + 0x04
.EQU NVIC_IPR6,   NVIC_IPR5 + 0x04
.EQU NVIC_IPR7,   NVIC_IPR6 + 0x04

.EQU SYSCFG_BASE, 		0x40013800
.EQU SYSCFG_EXTICR1,	SYSCFG_BASE + 0x08
.EQU SYSCFG_EXTICR2,	SYSCFG_BASE + 0x0C

.EQU EXTI_BASE,			0x40013C00
.EQU EXTI_IMR,			EXTI_BASE + 0x00
.EQU EXTI_RTSR,			EXTI_BASE + 0x08
.EQU EXTI_PR,			EXTI_BASE + 0x14

.EQU TIM2_BASE,			0x40000000
.EQU TIM2_CR1,			TIM2_BASE + 0x00
.EQU TIM2_DIER,			TIM2_BASE + 0x0C
.EQU TIM2_SR,			TIM2_BASE + 0x10
.EQU TIM2_PSC,			TIM2_BASE + 0x28
.EQU TIM2_ARR,			TIM2_BASE + 0x2C

.EQU TIM3_BASE,			0x40000400
.EQU TIM3_CR1,			TIM3_BASE + 0x00
.EQU TIM3_DIER,			TIM3_BASE + 0x0C
.EQU TIM3_SR,			TIM3_BASE + 0x10
.EQU TIM3_PSC,			TIM3_BASE + 0x28
.EQU TIM3_ARR,			TIM3_BASE + 0x2C

.EQU TIM4_BASE,			0x40000800
.EQU TIM4_CR1,			TIM4_BASE + 0x00
.EQU TIM4_DIER,			TIM4_BASE + 0x0C
.EQU TIM4_SR,			TIM4_BASE + 0x10
.EQU TIM4_PSC,			TIM4_BASE + 0x28
.EQU TIM4_ARR,			TIM4_BASE + 0x2C



.EQU BLACK,	 0x0000
.EQU BLUE, 	 0x001F
.EQU RED,  	 0xF800
.EQU YELLOW, 0xFFE0
.EQU WHITE,  0xFFFF
.EQU PINK,   0b1111100000011111
.EQU CYAN,   0x07FF

.EQU INTERVAL, 		0x186004
.EQU VECT_KEY,		0x05FA0000


@ Pacman initial values
.EQU PacmanInitialArray, 325
.EQU PacmanInitialX, 111
.EQU PacmanInitialY, 170
.EQU GhostInitialArray, 199
.EQU GhostInitialX, 111
.EQU GhostInitialY, 104
.EQU LivesX,310
.EQU LivesY,170
.EQU Map1Pellets, 156
.EQU Map2Pellets, 195



@D0 to D7 are PA0 to PA7
@RST is PA8
@RS is PA9
@WR is PA10

@MINIMUM NUMBER IN TIMER TICKS IS 30000



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ BIT MATH OPERATIONS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R0 FOR THE REGISTER
@USES R3 FOR THE BITNUMBER
TOG_PIN:
	PUSH {R0-R3,LR}
	LDR R1,[R0]
	LDR R2,=#0x1
	LSL R2,R2,R3
	EOR R1,R1,R2
	STR R1,[R0]
	POP {R0-R3,PC}
SET_PIN:
	PUSH {R0-R3,LR}
	LDR R1,[R0]
	LDR R2,=#0x1
	LSL R2,R2,R3
	ORR R1,R1,R2
	STR R1,[R0]
	POP {R0-R3,PC}
CLR_PIN:
	PUSH {R0-R3,LR}
	LDR R1,[R0]
	LDR R2,=#0x1
	LSL R2,R2,R3
	MVN R2,R2
	AND R1,R1,R2
	STR R1,[R0]
	POP {R0-R3,PC}
@USES R0 FOR THE REGISTER
@USES R2 FOR THE DATA
VALUE_8_PINS:
	PUSH {R0-R3,LR}
	LDR R1,[R0]

	LDR R3,=0xFF
	MVN R3,R3
	AND R1,R1,R3
	ORR R1,R1,R2

	STR R1,[R0]
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ DELAY FUNCTIONS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
DELAY_MS:
	PUSH {R8,LR}
	LDR R8,=INTERVAL
DELAY_LOOP:
	SUBS R8, #1
	CMP R8, #0
	BGE DELAY_LOOP
	POP {R8,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@






.global AsmMain
.section .text
AsmMain:
	BL SETUP

	ldr r0,=0
	LDR R1,=319
	LDR R3,=0
	LDR R4,=239
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE
	BL MAINMENU_CHOOSEAGAME

APPSELECTGAME:
	LDR R0,=GAMESELECT
	LDRB R0,[R0]
	CMP R0,#1
	BEQ APPDrawPacmanSelected

	LDR R0,=50
	LDR R1,=63
	LDR R3,=150
	LDR R4,=173
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE

	BL MAINMENU_PACMAN
	BL MAINMENU_PONGSELECTED

	LDR R3,=120
	BL MAINMENU_ARROW

	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#0
	BEQ APPSELECTGAME
	CMP R0,#2
	BEQ PONG_GAME_START

	B APPSELECTGAME
APPDrawPacmanSelected:

	LDR R0,=50
	LDR R1,=63
	LDR R3,=120
	LDR R4,=143
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE

	BL MAINMENU_PACMANSELECTED
	BL MAINMENU_PONG

	LDR R3,=150
	BL MAINMENU_ARROW

	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#0
	BEQ APPSELECTGAME

	CMP R0,#1
	BNE PONG_GAME_START
	BL PACMAN_RESET
	B PACMAN_GAME_START_GAME
PACMAN_GAME_START_GAME:
	BL PACMAN_MOVE_DRAW
	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#0
	BEQ AsmMain
	B PACMAN_GAME_START_GAME
PONG_GAME_START:
	BL PONG_INIT
PONG_GAME_START_GAME:
	BL PONG_DrawMap
	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#0
	BEQ AsmMain
B PONG_GAME_START_GAME







@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ STARTUP FUNCTION @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
SETUP:
	PUSH {LR}
	BL RCC_INIT
	BL GPIO_INIT
	BL NVIC_INIT
	BL EXTI_INIT
	BL TFT_INIT
	POP {PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@










@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ RCC INITIALIZATION @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
RCC_INIT:
	PUSH {R0-R2,LR}

	//LDR R0,=RCC_CR
	//LDR R1,=0x3007A83
	//STR R1,[R0]

	//LDR R0,=RCC_PLLCFGR
	//LDR R1,=0x4001508
	//STR R1,[R0]

	//LDR R0,=RCC_CFGR
	//LDR R1,=0x108A
	//STR R1,[R0]

	LDR R0,=RCC_AHB1ENR
	LDR R1,[R0]
	LDR R2,=0b11
	ORR R1,R1,R2
	STR R1,[R0]

	LDR R0,=RCC_APB1ENR
	LDR R1,[R0]
	LDR R2,=0b111
	ORR R1,R1,R2
	STR R1,[R0]

	LDR R0,=RCC_APB2ENR
	LDR R1,[R0]
	LDR R2,=0x4000
	ORR R1,R1,R2
	STR R1,[R0]

	POP {R0-R2,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ GPIO INITIALIZATION @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
GPIO_INIT:
	PUSH {R0-R2,LR}
	@SET PA0 --> PA10 TO OUTPUT_MODE
	LDR R0,=GPIOA_MODER
	LDR R1,[R0]
	LDR R2,=#0x00155555
	ORR R1,R1,R2
	STR R1,[R0]
	@SET PB0 --> PB5 TO INPUT_PULLUP
	LDR R0,=GPIOB_PUPDR
	LDR R1,[R0]
	LDR R2,=0x555
	ORR R1,R1,R2
	STR R1,[R0]
	POP {R0-R2,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@










@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ NVIC INITIALIZATION @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PRIVILEGE:
	PUSH {R0,LR}
	AND R0,R0,#0x6
	MSR CONTROL,R0
	POP {R0,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
SetPrioGroup:
	PUSH {R0-R2,LR}
	@ENTER PRIVILEGE MODE
	BL PRIVILEGE
	@LOAD THE GROUPING CONFIGURATION IN AIRCR
	LDR R0,=SCB_AIRCR
	LDR R1,=VECT_KEY
	STR R1,[R0]
	LDR R2,=0b110
	LSL R2,R2,#8
	ORR R1,R1,R2
	STR R1,[R0]
	POP {R0-R2,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
EnableUsedInterrupts:
	PUSH {R0-R1,LR}
	LDR R0,=NVIC_ISER0
	LDR R1,=0x708007C0
	STR R1,[R0]
	POP {R0-R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@ALL TIMs WILL HAVE PRIO G1SG1
@ALL EXTIs WILL HAVE PRIO G2SG1
SetPriorities:
	PUSH {R0-R1,LR}

	LDR R0,=NVIC_IPR1
	LDR R1,=0x20200000
	STR R1,[R0]

	LDR R0,=NVIC_IPR2
	LDR R1,=0x202020
	STR R1,[R0]

	LDR R0,=NVIC_IPR5
	LDR R1,=0x20000000
	STR R1,[R0]

	LDR R0,=NVIC_IPR7
	LDR R1,=0x101010
	STR R1,[R0]

	POP {R0-R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
NVIC_INIT:
	PUSH {R0-R1,LR}
	BL SetPrioGroup
	BL EnableUsedInterrupts
	BL SetPriorities
	POP {R0-R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ EXTI INITIALIZATION @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
EXTI_INIT:
	PUSH {R0-R1,LR}

	LDR R0,=SYSCFG_EXTICR1
	LDR R1,=#0x00001111
	STR R1,[R0]

	LDR R0,=SYSCFG_EXTICR2
	LDR R1,=#0x00000011
	STR R1,[R0]

	LDR R0,=EXTI_IMR
	LDR R1,=#0x0000003F
	STR R1,[R0]

	LDR R0,=EXTI_RTSR
	LDR R1,=#0x0000003F
	STR R1,[R0]

	POP {R0-R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ TIM INITIALIZATION @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS TICKS
TIM2_START_IT:
	PUSH {R0-R4,LR}

	LDR R0,=TIM2_PSC
	LDR R1,=0xF
	STR R1,[R0]

	LDR R0,=TIM2_ARR
	STR R2,[R0]

	LDR R0,=TIM2_CR1
	LDR R3,=#0
	BL SET_PIN

	LDR R0,=TIM2_DIER
	LDR R1,=0x1
	STR R1,[R0]

	POP {R0-R4,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS TICKS
TIM3_START_IT:
	PUSH {R0-R4,LR}

	LDR R0,=TIM3_PSC
	LDR R1,=0xF
	STR R1,[R0]

	LDR R0,=TIM3_ARR
	STR R2,[R0]

	LDR R0,=TIM3_CR1
	LDR R3,=#0
	BL SET_PIN

	LDR R0,=TIM3_DIER
	LDR R1,=0x1
	STR R1,[R0]

	POP {R0-R4,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS TICKS
TIM2_STOP_IT:
	PUSH {R0,R3,LR}

	LDR R0,=TIM2_CR1
	LDR R3,=#0
	BL CLR_PIN

	POP {R0,R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS TICKS
TIM3_STOP_IT:
	PUSH {R0,R3,LR}

	LDR R0,=TIM3_CR1
	LDR R3,=#0
	BL CLR_PIN

	POP {R0,R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS TICKS
TIM4_START_IT:
	PUSH {R0-R4,LR}

	LDR R0,=TIM4_PSC
	LDR R1,=0xF
	STR R1,[R0]

	LDR R0,=TIM4_ARR
	STR R2,[R0]

	LDR R0,=TIM4_CR1
	LDR R3,=#0
	BL SET_PIN

	LDR R0,=TIM4_DIER
	LDR R1,=0x1
	STR R1,[R0]

	POP {R0-R4,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@






@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ TFT FUNCTIONS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS DATA TO WRITE
TFT_WRITE:
	PUSH {R0-R3,LR}
	@RESET WR (PIN10)
	LDR R0,=GPIOA_ODR
	LDR R3,=10
	BL CLR_PIN
	@WRITE DATA [R0 is already ODR, and R2 should already contain the data]
	BL VALUE_8_PINS
	@SET WR (PIN10)
	BL SET_PIN
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS DATA TO WRITE
TFT_WRITE_DATA:
	PUSH {R0-R3,LR}
	@SET RS (PIN9)
	LDR R0,=GPIOA_ODR
	LDR R3,=9
	BL SET_PIN
	@CALL FUNCTION TFT_WRITE
	BL TFT_WRITE
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R2 AS DATA TO WRITE
TFT_WRITE_COMMAND:
	PUSH {R0-R3,LR}
	@RESET RS (PIN9)
	LDR R0,=GPIOA_ODR
	LDR R3,=9
	BL CLR_PIN
	@CALL FUNCTION TFT_WRITE
	BL TFT_WRITE
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
TFT_RESET_SEQUENCE:
	PUSH {R0,R3,LR}
	@SET RST (PIN8) THEN DELAY
	LDR R0,=GPIOA_ODR
	LDR R3,=8
	BL SET_PIN
	BL DELAY_MS
	@RESET RST (PIN8) THEN DELAY
	BL CLR_PIN
	BL DELAY_MS
	@SET RST (PIN8) THEN DELAY
	BL SET_PIN
	BL DELAY_MS
	LDR R2,=0x01
	BL TFT_WRITE_COMMAND
	POP {R0,R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
TFT_INIT:
	PUSH {R0-R3,LR}
	@RESET SEQUENCE
	BL TFT_RESET_SEQUENCE
	@DISPLAY OFF COMMAND (0x28)
	LDR R2,=0x28
	BL TFT_WRITE_COMMAND
	@CONTRAST SETTINGS COMMAND (0xC5)
	LDR R2,=0xC5
	BL TFT_WRITE_COMMAND
	LDR R2,=0x54
	BL TFT_WRITE_DATA
	LDR R2,=0x00
	BL TFT_WRITE_DATA
	@MEMORY ACCESS COMMAND (0x36)
	LDR R2,=0x36
	BL TFT_WRITE_COMMAND
	LDR R2,=0x68
	BL TFT_WRITE_DATA
	@PIXEL FORMAT COMMAND (0x3A)
	LDR R2,=0x3A
	BL TFT_WRITE_COMMAND
	LDR R2,=0x55
	BL TFT_WRITE_DATA
	@INVERT SCREEN COMMAND (0x20)
	LDR R2,=0x20
	BL TFT_WRITE_COMMAND
	@SLEEP OUT COMMAND (0x11)
	LDR R2,=0x11
	BL TFT_WRITE_COMMAND
	BL DELAY_MS
	@DISPLAY ON COMMAND (0x29)
	LDR R2,=0x29
	BL TFT_WRITE_COMMAND
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R0 AS X1
@USES R1 AS X2
@USES R3 AS Y1
@USES R4 AS Y2
TFT_SET_DRAWING_AREA:
	PUSH {R0-R4,LR}
	@COLUMN ADDRESS SET COMMAND (0x2A)
	LDR R2,=0x2A
	BL TFT_WRITE_COMMAND
	@WRITE HIGHER X1
	LSR R2,R0,#8
	BL TFT_WRITE_DATA
	@WRITE LOWER X1
	AND R2,R0,#0xFF
	BL TFT_WRITE_DATA
	@WRITE HIGHER X2
	LSR R2,R1,#8
	BL TFT_WRITE_DATA
	@WRITE LOWER X2
	AND R2,R1,#0xFF
	BL TFT_WRITE_DATA

	@PAGE ADDRESS SET COMMAND (0x2A)
	LDR R2,=0x2B
	BL TFT_WRITE_COMMAND
	@WRITE HIGHER X1
	LSR R2,R3,#8
	BL TFT_WRITE_DATA
	@WRITE LOWER X1
	AND R2,R3,#0xFF
	BL TFT_WRITE_DATA
	@WRITE HIGHER X2
	LSR R2,R4,#8
	BL TFT_WRITE_DATA
	@WRITE LOWER X2
	AND R2,R4,#0xFF
	BL TFT_WRITE_DATA

	POP {R0-R4,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R0 AS X1
@USES R1 AS X2
@USES R3 AS Y1
@USES R4 AS Y2
@USES R10 AS COLOR
TFT_DRAW_RECTANGLE:
	PUSH {R0-R6,R10,LR}
	BL TFT_SET_DRAWING_AREA
	@GET THE DIFFERENCE IN X
	SUB R5,R1,R0
	@GET THE DIFFERENCE IN Y
	SUB R6,R4,R3
	@ADD ONE IN EACH DIFFERENCE
	ADD R5,R5,#1
	ADD R6,R6,#1
	MUL R6,R6,R5
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@ITERATE AND DISPLAY
DisplaySquare:
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA

	SUB R6,R6,#1
	CMP R6,#0
	BNE DisplaySquare

	POP {R0-R6,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R5 AS X CENTER
@USES R6 AS Y CENTER
@USES R7 AS THE LENGTH OF THERADIUS
@USES R10 AS THE COLOUR OF THE CIRCLE
TFT_DRAW_CIRCLE:
	PUSH {R0-R11,LR}

	@GET THE BOX
	SUB R0,R5,R7	@START X
	ADD R1,R5,R7	@END X
	SUB R3,R6,R7	@START Y
	ADD R4,R6,R7	@END Y
	BL TFT_SET_DRAWING_AREA

	MOV R8,R5
	MOV R11,R6

	MUL R9,R7,R7
	MOV R5,R3
	MOV R3,R0

	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND

	@R0 CONTAINS X START
	@R1 CONTAINS X END
	@R3 CONTAINS X MOV
	@R4 CONTAINS Y END
	@R5 CONTAINS Y MOV
	@R6 CONTAINS x^2
	@R7 CONTAINS y^2
	@R8 CONTAINS X CENTER
	@R9 CONTAINS r^2
	@R10 CONTAINS COLOUR
	@R11 CONTAINS Y CENTER
	B MoveOnX
MoveOnX:
	@GET x^2 AND y^2
	PUSH {R3,R5}
	SUB R3,R3,R8
	MUL R6,R3,R3
	SUB R5,R5,R11
	MUL R7,R5,R5
	POP {R5,R3}
	@GET x^2 + y^2
	ADD R6,R6,R7
	CMP R6,R9		@if x^2 + y^2 <= r^2, display
	BHI DontDisplayCircle
	@IF DIDN'T JUMP, DISPLAY
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	B SkipBlackCircle
DontDisplayCircle:
	LDR R2,=0x00
	BL TFT_WRITE_DATA
	LDR R2,=0x00
	BL TFT_WRITE_DATA
	B SkipBlackCircle
SkipBlackCircle:
	@INCREMENT MOVING X
	ADD R3,R3,#1
	CMP R3,R1		@if X moving <= X end, KEEP GOING
	BLE MoveOnX
	@IF it didnt jump, this means that X moving has reached it's limits
	@reset it firstly,
	MOV R3,R0
	@Then, increment current Y position
	ADD R5,R5,#1
	@CHECK IF Y reached it's limit
	CMP R5,R4	    @if Y moving <= Y end, KEEP GOING
	BLE MoveOnX
	POP {R0-R11,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R3 AS Y1
@USES R4 AS Y2
@USES R5 AS X1
@USES R6 AS X2
@USES R7 AS X1EMPTY
@USES R8 AS X2EMPTY
@USES R11 AS THE EMPTINESS BETWEEN THEM
@USES R12 AS COLOR
TFT_DISPLAY_PARALLEL_RECTANGLES:
	PUSH {R0-R2,R10,LR}
	@FIRSTLY, DRAW THE FIRST RECTANGLE
	MOV R0,R5
	SUB R1,R7,#1
	MOV R10,R12
	BL TFT_DRAW_RECTANGLE
	@NOW, DRAW THE EMPTY "RECTANGLE"
	MOV R0,R7
	MOV R1,R8
	MOV R10,R11
	BL TFT_DRAW_RECTANGLE
	@NOW, DRAW THE SECOND RECTANGLE
	ADD R0,R8,#1
	MOV R1,R6
	MOV R10,R12
	BL TFT_DRAW_RECTANGLE
	POP {R0-R2,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R3 AS Y1
@USES R4 AS Y2
@USES R5 AS X1
@USES R6 AS X2
@USES R7 AS X1EMPTY
@USES R11 AS THE EMPTINESS BETWEEN THEM
@USES R12 AS COLOR
TFT_DISPLAY_LEFTSIDE_RECTANGLE:
	PUSH {R0-R2,R10,LR}
	@FIRSTLY, DRAW THE RECTANGLE
	MOV R0,R5
	SUB R1,R7,#1
	MOV R10,R12
	BL TFT_DRAW_RECTANGLE
	@NOW, DRAW THE EMPTY "RECTANGLE"
	MOV R0,R7
	MOV R1,R6
	MOV R10,R11
	BL TFT_DRAW_RECTANGLE
	POP {R0-R2,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@USES R3 AS Y1
@USES R4 AS Y2
@USES R5 AS X1
@USES R6 AS X2
@USES R7 AS X1EMPTY
@USES R11 AS THE EMPTINESS BETWEEN THEM
@USES R12 AS COLOR
TFT_DISPLAY_RIGHTSIDE_RECTANGLE:
	PUSH {R0-R2,R10,LR}
	@FIRSTY, DRAW THE EMPTY "RECTANGLE"
	MOV R0,R5
	MOV R1,R7
	MOV R10,R11
	BL TFT_DRAW_RECTANGLE
	@THEN, DRAW THE RECTANGLE
	ADD R0,R7,#1
	MOV R1,R6
	MOV R10,R12
	BL TFT_DRAW_RECTANGLE
	POP {R0-R2,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@BEFORE CALLING THIS FUNCTION, YOU SHALL USE THE TFT_SET_DRAWING_AREA
@NOTE THAT: HEIGHT OF A NUMBER = 20, WIDTH = 10
@USES R1 FOR DIGIT
@USES R10 FOR COLOUR
@USES R11 FOR EMPTY COLOUR
TFT_DISPLAY_DIGIT:
	PUSH {R0-R3,LR}
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
DisplayDigit0:
	CMP R1,#0
	BHI DisplayDigit1
	@if number = 0
	LDR R0,=50
	IterationOf00:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf00
		LDR R0,=0
		LDR R3,=0
	IterationOf01:
		CMP R0,#2
		BLO DisplayNumber01
		CMP R0,#7
		BHI DisplayNumber01
		B DontDisplayNumber01
	DisplayNumber01:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber01
	DontDisplayNumber01:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber01
	SkipNumber01:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf01
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#10
		BLO IterationOf01
		LDR R0,=50
	IterationOf02:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf02
		@END OF DISPLAY DIGIT 0
		B EndOfDisplayingDigit
DisplayDigit1:
		CMP R1,#1
		BHI DisplayDigit2
		@if number = 1
		LDR R0,=0
		LDR R3,=0
	IterationOf10:
		CMP R0,#7
		BLO DontDisplayNumber10
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber10
	DontDisplayNumber10:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber10
	SkipNumber10:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf10
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#14
		BLO IterationOf10
		LDR R0,=50
	IterationOf11:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf11
		@END OF DISPLAY DIGIT 1
		B EndOfDisplayingDigit
DisplayDigit2:
		CMP R1,#2
		BHI DisplayDigit3
		@if number = 2
		LDR R0,=40
	IterationOf20:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf20
		LDR R0,=0
		LDR R3,=0
	IterationOf21:
		CMP R0,#3
		BHI DontDisplayNumber21
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber21
	DontDisplayNumber21:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber21
	SkipNumber21:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf21
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#3
		BLO IterationOf21
		LDR R0,=40
	IterationOf22:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf22
		LDR R0,=0
		LDR R3,=0
	IterationOf23:
		CMP R0,#7
		BLO DontDisplayNumber23
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber23
	DontDisplayNumber23:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber23
	SkipNumber23:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf23
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#3
		BLO IterationOf23
		LDR R0,=40
	IterationOf24:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf24
		@END OF DISPLAY DIGIT 2
		B EndOfDisplayingDigit
DisplayDigit3:
		CMP R1,#3
		BHI DisplayDigit4
		@if number = 3
		LDR R0,=40
	IterationOf30:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf30
		LDR R0,=0
		LDR R3,=0
	IterationOf31:
		CMP R0,#7
		BLO DontDisplayNumber31
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber31
	DontDisplayNumber31:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber31
	SkipNumber31:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf31
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#3
		BLO IterationOf31
		LDR R0,=40
	IterationOf32:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf32
		LDR R0,=0
		LDR R3,=0
	IterationOf33:
		CMP R0,#7
		BLO DontDisplayNumber33
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber33
	DontDisplayNumber33:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber33
	SkipNumber33:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf33
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#3
		BLO IterationOf33
		LDR R0,=40
	IterationOf34:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf34
		@END OF DISPLAY DIGIT 3
		B EndOfDisplayingDigit
DisplayDigit4:
		CMP R1,#4
		BHI DisplayDigit5
		@if number = 4
		LDR R0,=0
		LDR R3,=0
	IterationOf40:
		CMP R0,#7
		BLO DontDisplayNumber40
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber40
	DontDisplayNumber40:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber40
	SkipNumber40:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf40
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#7
		BLO IterationOf40
		LDR R0,=60
	IterationOf41:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf41
		LDR R0,=0
		LDR R3,=0
	IterationOf42:
		CMP R0,#3
		BLO DisplayNumber42
		CMP R0,#6
		BHI DisplayNumber42
		B DontDisplayNumber42
	DisplayNumber42:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber42
	DontDisplayNumber42:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber42
	SkipNumber42:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf42
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#7
		BLO IterationOf42
		@END OF DISPLAY DIGIT 4
		B EndOfDisplayingDigit
DisplayDigit5:
		CMP R1,#5
		BHI DisplayDigit6
		@if number = 5
		LDR R0,=40
	IterationOf50:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf50
		LDR R0,=0
		LDR R3,=0
	IterationOf51:
		CMP R0,#7
		BLO DontDisplayNumber51
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber51
	DontDisplayNumber51:
		LDR R2,=0
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber51
	SkipNumber51:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf51
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#3
		BLO IterationOf51
		LDR R0,=40
	IterationOf52:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf52
		LDR R0,=0
		LDR R3,=0
	IterationOf53:
		CMP R0,#3
		BHI DontDisplayNumber53
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber53
	DontDisplayNumber53:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber53
	SkipNumber53:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf53
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#3
		BLO IterationOf53
		LDR R0,=40
	IterationOf54:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf54
		@END OF DISPLAY DIGIT 5
		B EndOfDisplayingDigit
DisplayDigit6:
		CMP R1,#6
		BHI DisplayDigit7
		@if number = 6
		LDR R0,=40
	IterationOf60:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf60
		LDR R0,=0
		LDR R3,=0
	IterationOf61:
		CMP R0,#3
		BLO DisplayNumber61
		CMP R0,#6
		BHI DisplayNumber61
		B DontDisplayNumber61
	DisplayNumber61:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber61
	DontDisplayNumber61:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber61
	SkipNumber61:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf61
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#6
		BLO IterationOf61
		LDR R0,=40
	IterationOf62:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf62
		LDR R0,=0
		LDR R3,=0
	IterationOf63:
		CMP R0,#3
		BHI DontDisplayNumber63
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber63
	DontDisplayNumber63:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber63
	SkipNumber63:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf63
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#6
		BLO IterationOf63
		@END OF DISPLAY DIGIT 6
		B EndOfDisplayingDigit
DisplayDigit7:
		CMP R1,#7
		BHI DisplayDigit8
		@if number = 7
		LDR R0,=0
		LDR R3,=0
	IterationOf70:
		CMP R0,#7
		BLO DontDisplayNumber70
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber70
	DontDisplayNumber70:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber70
	SkipNumber70:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf70
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#14
		BLO IterationOf70
		LDR R0,=50
	IterationOf71:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf71
		@END OF DISPLAY DIGIT 7
		B EndOfDisplayingDigit
DisplayDigit8:
		CMP R1,#8
		BHI DisplayDigit9
		@if number = 8
		LDR R0,=40
	IterationOf80:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf80
		LDR R0,=0
		LDR R3,=0
	IterationOf81:
		CMP R0,#3
		BLO DisplayNumber81
		CMP R0,#6
		BHI DisplayNumber81
		B DontDisplayNumber81
	DisplayNumber81:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber81
	DontDisplayNumber81:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber81
	SkipNumber81:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf81
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#4
		BLO IterationOf81
		LDR R0,=40
	IterationOf82:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf82
		LDR R0,=0
		LDR R3,=0
	IterationOf83:
		CMP R0,#3
		BLO DisplayNumber83
		CMP R0,#6
		BHI DisplayNumber83
		B DontDisplayNumber83
	DisplayNumber83:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber83
	DontDisplayNumber83:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber83
	SkipNumber83:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf83
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#4
		BLO IterationOf83
		LDR R0,=40
	IterationOf84:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf84
		@END OF DISPLAY DIGIT 8
		B EndOfDisplayingDigit
DisplayDigit9:
		LDR R0,=0
		LDR R3,=0
	IterationOf90:
		CMP R0,#6
		BLO DontDisplayNumber90
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber90
	DontDisplayNumber90:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber90
	SkipNumber90:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf90
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#7
		BLO IterationOf90
		LDR R0,=40
	IterationOf91:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf91
		LDR R0,=0
		LDR R3,=0
	IterationOf92:
		CMP R0,#3
		BLO DisplayNumber92
		CMP R0,#6
		BHI DisplayNumber92
		B DontDisplayNumber92
	DisplayNumber92:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber92
	DontDisplayNumber92:
		LSR R2,R11,#8
		BL TFT_WRITE_DATA
		AND R2,R11,#0xFF
		BL TFT_WRITE_DATA
		B SkipNumber92
	SkipNumber92:
		ADD R0,R0,#1
		CMP R0,#10
		BLO IterationOf92
		LDR R0,=0
		ADD R3,R3,#1
		CMP R3,#5
		BLO IterationOf92
		LDR R0,=40
	IterationOf93:
		LSR R2,R10,#8
		BL TFT_WRITE_DATA
		AND R2,R10,#0xFF
		BL TFT_WRITE_DATA
		SUB R0,R0,#1
		CMP R0,#0
		BHI IterationOf93
		@END OF DISPLAY DIGIT 9
		B EndOfDisplayingDigit
EndOfDisplayingDigit:
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ HANDLERS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.EXTI0_IRQHandler
  .weak EXTI0_IRQHandler
  .type EXTI0_IRQHandler, %function
EXTI0_IRQHandler:
	PUSH {R0-R5,LR}

	@WRITE FUNCTION HERE
	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#0
	BNE EXTI0_GAMES
	LDR R0,=GAMESELECT
	LDR R1,=1
	STRB R1,[R0]
	B EXTI0_END
EXTI0_GAMES:
	CMP R0,#2
	BNE EXTI_0_PACMAN
	BL PONG_MoveOSUp
	B EXTI0_END
EXTI_0_PACMAN:
	LDR R5,=delay_1_pacman
	LDRB R4,[R5,#1]
	CMP R4,#1
	BEQ EXTI0_END
	LDR R4,=1
	STRB R4,[R5,#1]
	BL PACMAN_MOVE_RIGHT
	B EXTI0_END
EXTI0_END:
	@SET PENDING FLAG
	LDR R0,=EXTI_PR
	LDR R3,=#0
	BL SET_PIN
	POP {R0-R5,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.EXTI1_IRQHandler
  .weak EXTI1_IRQHandler
  .type EXTI1_IRQHandler, %function
EXTI1_IRQHandler:
	PUSH {R0-R5,LR}
	@WRITE FUNCTION HERE
	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#0
	BNE EXTI1_GAMES
	LDR R0,=GAMESELECT
	LDR R1,=2
	STRB R1,[R0]
	B EXTI1_END
EXTI1_GAMES:
	CMP R0,#2
	BNE EXTI_1_PACMAN
	BL PONG_MoveOSDown
	B EXTI1_END
EXTI_1_PACMAN:
	LDR R5,=delay_1_pacman
	LDRB R4,[R5,#1]
	CMP R4,#1
	BEQ EXTI1_END
	LDR R4,=1
	STRB R4,[R5,#1]
	BL PACMAN_MOVE_LEFT
	B EXTI1_END
EXTI1_END:
	@SET PENDING FLAG
	LDR R0,=EXTI_PR
	LDR R3,=#1
	BL SET_PIN
	POP {R0-R5,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.EXTI3_IRQHandler
  .weak EXTI3_IRQHandler
  .type EXTI3_IRQHandler, %function
EXTI3_IRQHandler:
	PUSH {R0-R5,LR}

	@WRITE FUNCTION HERE
	LDR R5,=delay_1_pacman
	LDRB R4,[R5,#1]
	CMP R4,#1
	BEQ EXTI3_PACMAN_SKIP
	LDR R4,=1
	STRB R4,[R5,#1]
	BL PACMAN_MOVE_UP
	B EXTI3_PACMAN_SKIP
EXTI3_PACMAN_SKIP:

	@SET PENDING FLAG
	LDR R0,=EXTI_PR
	LDR R3,=#3
	BL SET_PIN
	POP {R0-R5,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.EXTI4_IRQHandler
  .weak EXTI4_IRQHandler
  .type EXTI4_IRQHandler, %function
EXTI4_IRQHandler:
	PUSH {R0-R5,LR}

	@WRITE FUNCTION HERE
	LDR R5,=delay_1_pacman
	LDRB R4,[R5,#1]
	CMP R4,#1
	BEQ EXTI4_PACMAN_SKIP
	LDR R4,=1
	STRB R4,[R5,#1]
	BL PACMAN_MOVE_DOWN
	B EXTI4_PACMAN_SKIP
EXTI4_PACMAN_SKIP:

	@SET PENDING FLAG
	LDR R0,=EXTI_PR
	LDR R3,=#4
	BL SET_PIN
	POP {R0-R5,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.EXTI9_5_IRQHandler
  .weak EXTI9_5_IRQHandler
  .type EXTI9_5_IRQHandler, %function
EXTI9_5_IRQHandler:
	PUSH {R0-R3,LR}

	@WRITE FUNCTION HERE
	LDR R1,=GAMEFLAG
	LDRB R0,[R1]
	CMP R0,#0
	BEQ PONG_PACMAN_SELECT
	LDR R0,=0
	STRB R0,[R1]
	LDR R0,=GAMESELECT
	LDR R1,=1
	STRB R1,[R0]
	BL TIM2_STOP_IT
	B EXTI5_END
PONG_PACMAN_SELECT:
	LDR R2,=GAMESELECT
	LDRB R0,[R2]
	STRB R0,[R1]
	B EXTI5_END
EXTI5_END:
	@SET PENDING FLAG
	LDR R0,=EXTI_PR
	LDR R3,=#5
	BL SET_PIN
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.TIM2_IRQHandler
  .weak TIM2_IRQHandler
  .type TIM2_IRQHandler, %function
TIM2_IRQHandler:
	PUSH {R0-R9,LR}

	@WRITE FUNCTION HERE
	LDR R0,=GAMEFLAG
	LDRB R0,[R0]
	CMP R0,#1
	BEQ TIM2_PACMAN
	BL PONG_MoveBall
	B RESPAWN_DELAY_SKIP
TIM2_PACMAN:
	LDR R9,=delay_1_pacman
	LDR R8,=0
	STRB R8,[R9,#1]
	LDRB R8,[R9]
	CMP R8,#0
	BNE PACMAN_RESPAWN_DELAY
	LDR R7,=frightened
	LDRB R4,[R7]
	CMP R4,#0
	BEQ PACMAN_TIM2_SKIP
	LDRB R6,[R7,#1]
	SUB R6,R6,#1
	STRB R6,[R7,#1]
	CMP R6,#0
	BNE PACMAN_TIM2_SKIP
	LDR R6,=8
	STRB R6,[R7,#1]
	LDR R4,=0
	STRB R4,[R7]
PACMAN_TIM2_SKIP:
	BL GHOST_MOVE_CHASE_ESCAPE
	BL GHOST_MOVE_DRAW
	B RESPAWN_DELAY_SKIP
PACMAN_RESPAWN_DELAY:
	SUB R8,R8,#1
	STRB R8,[R9]
	B RESPAWN_DELAY_SKIP
RESPAWN_DELAY_SKIP:
	@CLEAR FLAG
	LDR R0,=TIM2_SR
	LDR R1,=0
	STR R1,[R0]
	POP {R0-R9,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.TIM3_IRQHandler
  .weak TIM3_IRQHandler
  .type TIM3_IRQHandler, %function
TIM3_IRQHandler:
	PUSH {R0-R1,LR}
	@WRITE FUNCTION HERE
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	LDR R0,=PONG_FREEZE
	LDRB R1,[R0]
	CMP R1,#255
	BEQ TIM3_WORKNORMAL
	SUB R1,R1,#1
	CMP R1,#0
	BEQ TIM3_REMFREEZE
	STRB R1,[R0]
	B TIM3_ENDCODE
TIM3_REMFREEZE:
	LDR R1,=255
	STRB R1,[R0]
	B TIM3_ENDCODE
TIM3_WORKNORMAL:
	BL PONG_MoveES
	B TIM3_ENDCODE
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	@CLEAR FLAG
TIM3_ENDCODE:
	LDR R0,=TIM3_SR
	LDR R1,=0
	STR R1,[R0]
	POP {R0-R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .section .text.TIM4_IRQHandler
  .weak TIM4_IRQHandler
  .type TIM4_IRQHandler, %function
TIM4_IRQHandler:
	PUSH {R0-R3,LR}
	@WRITE FUNCTION HERE
	@CLEAR FLAG
	LDR R0,=TIM4_SR
	LDR R1,=0
	STR R1,[R0]
	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ MAIN MENU @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MAINMENU_CHOOSEAGAME:
	PUSH {R0-R5,R10,LR}
	@SET THE DRAWING AREA
	LDR R0,=67
	ADD R1,R0,#184
	LDR R3,=200
	ADD R4,R3,#20
	BL TFT_SET_DRAWING_AREA
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@SET THE FOR LOOP
	LDR R5,=3700
	LDR R0,=CHOOSEAGAME
MAINMENU_CHOOSEAGAMEForLoop:
	@FETCH THE DATA
	LDRH R10,[R0]
	@DRAW THE PIXEL
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	@GET THE NEXT ADDRESS
	ADD R0,R0,#2
	SUB R5,R5,#1
	CMP R5,#0
	BNE MAINMENU_CHOOSEAGAMEForLoop
	POP {R0-R5,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MAINMENU_PACMAN:
	PUSH {R0-R5,R10,LR}
	@SET THE DRAWING AREA
	LDR R0,=67
	ADD R1,R0,#114
	LDR R3,=150
	ADD R4,R3,#22
	BL TFT_SET_DRAWING_AREA
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@SET THE FOR LOOP
	LDR R5,=2530
	LDR R0,=PACMANNOTSELECTED
MAINMENU_PACMANForLoop:
	@FETCH THE DATA
	LDRH R10,[R0]
	@DRAW THE PIXEL
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	@GET THE NEXT ADDRESS
	ADD R0,R0,#2
	SUB R5,R5,#1
	CMP R5,#0
	BNE MAINMENU_PACMANForLoop
	POP {R0-R5,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MAINMENU_PACMANSELECTED:
	PUSH {R0-R5,R10,LR}
	@SET THE DRAWING AREA
	LDR R0,=67
	ADD R1,R0,#114
	LDR R3,=150
	ADD R4,R3,#22
	BL TFT_SET_DRAWING_AREA
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@SET THE FOR LOOP
	LDR R5,=2530
	LDR R0,=PACMANSELECTED
MAINMENU_PACMANSELECTEDForLoop:
	@FETCH THE DATA
	LDRH R10,[R0]
	@DRAW THE PIXEL
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	@GET THE NEXT ADDRESS
	ADD R0,R0,#2
	SUB R5,R5,#1
	CMP R5,#0
	BNE MAINMENU_PACMANSELECTEDForLoop
	POP {R0-R5,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MAINMENU_PONG:
	PUSH {R0-R5,R10,LR}
	@SET THE DRAWING AREA
	LDR R0,=67
	ADD R1,R0,#72
	LDR R3,=120
	ADD R4,R3,#22
	BL TFT_SET_DRAWING_AREA
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@SET THE FOR LOOP
	LDR R5,=1606
	LDR R0,=PONGNOTSELECTED
MAINMENU_PONGForLoop:
	@FETCH THE DATA
	LDRH R10,[R0]
	@DRAW THE PIXEL
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	@GET THE NEXT ADDRESS
	ADD R0,R0,#2
	SUB R5,R5,#1
	CMP R5,#0
	BNE MAINMENU_PONGForLoop
	POP {R0-R5,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MAINMENU_PONGSELECTED:
	PUSH {R0-R5,R10,LR}
	@SET THE DRAWING AREA
	LDR R0,=67
	ADD R1,R0,#72
	LDR R3,=120
	ADD R4,R3,#22
	BL TFT_SET_DRAWING_AREA
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@SET THE FOR LOOP
	LDR R5,=1606
	LDR R0,=PONGSELECTED
MAINMENU_PONGSELECTEDForLoop:
	@FETCH THE DATA
	LDRH R10,[R0]
	@DRAW THE PIXEL
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	@GET THE NEXT ADDRESS
	ADD R0,R0,#2
	SUB R5,R5,#1
	CMP R5,#0
	BNE MAINMENU_PONGSELECTEDForLoop
	POP {R0-R5,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MAINMENU_ARROW:
	PUSH {R0-R5,R10,LR}
	@SET THE DRAWING AREA
	LDR R0,=50
	ADD R1,R0,#12
	ADD R4,R3,#22
	BL TFT_SET_DRAWING_AREA
	@MEMORY WRITE COMMAND (0x2C)
	LDR R2,=0x2C
	BL TFT_WRITE_COMMAND
	@SET THE FOR LOOP
	LDR R5,=286
	LDR R0,=MAINARROW
MAINMENU_ARROWForLoop:
	@FETCH THE DATA
	LDRH R10,[R0]
	@DRAW THE PIXEL
	LSR R2,R10,#8
	BL TFT_WRITE_DATA
	AND R2,R10,#0xFF
	BL TFT_WRITE_DATA
	@GET THE NEXT ADDRESS
	ADD R0,R0,#2
	SUB R5,R5,#1
	CMP R5,#0
	BNE MAINMENU_ARROWForLoop
	POP {R0-R5,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ PONG GAME @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PONG_INIT:
	PUSH {R0-R3,LR}
	@INITIALIZE VARIABLES
	LDR R0,=PONG_OSP
	LDR R1,=110
	STRB R1,[R0]

	LDR R0,=PONG_OSPM
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_ESP
	LDR R1,=110
	STRB R1,[R0]

	LDR R0,=PONG_ESPM
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_BXP
	LDR R1,=160
	STRH R1,[R0]

	LDR R0,=PONG_BYP
	LDR R1,=110
	STRB R1,[R0]

	LDR R0,=PONG_BPXP
	LDR R1,=160
	STRH R1,[R0]

	LDR R0,=PONG_BPYP
	LDR R1,=110
	STRB R1,[R0]

	LDR R0,=PONG_BXD
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_BYD
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_BPM
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_SCORE
	LDR R1,=0
	STRB R1,[R0]

	ADD R0,R0,#1
	LDR R1,=0
	STRB R1,[R0]

	ADD R0,R0,#1
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_FREEZE
	LDR R1,=255
	STRB R1,[R0]

	LDR R0,=PONG_EXPAND
	LDR R1,=255
	STRB R1,[R0]

	LDR R0,=PONG_POWERSCORE
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_POWER
	LDR R1,=0
	STRB R1,[R0]

	LDR R0,=PONG_BALLSPEED
	LDR R1,=200000
	STR R1,[R0]

	@DRAW BLACK SCREEN
	LDR R10,=BLACK
	LDR R0,=0
	LDR R1,=320
	LDR R3,=0
	LDR R4,=219
	BL TFT_DRAW_RECTANGLE
	@DRAW SCORE BAR
	LDR R3,=220
	LDR R4,=240
	LDR R10,=RED
	BL TFT_DRAW_RECTANGLE
	@DRAW OUR STICK
	LDR R3,=95
	LDR R4,=125
	LDR R10,=WHITE
	LDR R0,=5
	LDR R1,=10
	BL TFT_DRAW_RECTANGLE
	@DRAW ENEMY STICK
	LDR R0,=309
	LDR R1,=314
	BL TFT_DRAW_RECTANGLE
	LDR R5,=160
	@DRAW BALL
	LDR R6,=110
	LDR R7,=4
	LDR R10,=BLUE
	BL TFT_DRAW_CIRCLE
	@DISPLAY SCORE
	LDR R3,=220
	LDR R4,=239
	LDR R10,=WHITE
	LDR R11,=RED
	@DISPLAY THE HUNDREDS
	LDR R0,=15
	LDR R1,=24
	BL TFT_SET_DRAWING_AREA
	LDR R1,=0
	BL TFT_DISPLAY_DIGIT
	@DISPLAY THE TENS
	LDR R0,=28
	LDR R1,=37
	BL TFT_SET_DRAWING_AREA
	LDR R1,=0
	BL TFT_DISPLAY_DIGIT
	@DISPLAY THE ONES
	LDR R0,=41
	LDR R1,=50
	BL TFT_SET_DRAWING_AREA
	LDR R1,=0
	BL TFT_DISPLAY_DIGIT


	@BALL TIMER
	LDR R2,=200000
	BL TIM2_START_IT
	@STICK TIMER
	LDR R2,=300000
	BL TIM3_START_IT

	POP {R0-R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@THIS FUNCTION IS CALLED TO DISPLAY THE SCREEN
PONG_DrawMap:
	PUSH {R0-R7,R10,LR}
	@CHECK IF OUR STICK MOVED OR NOT
	LDR R0,=PONG_OSPM
	LDRB R5,[R0]
	CMP R5,#0
	@IF NOT 1, MEANS IT DIDN'T MOVE
	BEQ PONG_DrawMapDDOS
	@IF EQUAL TO 1, MEANS IT MOVED
	@X0 AND X1 ARE CONSTANT 5 TO 10
	MOV R0,#5
	MOV R1,#10
	@DRAW A RECTANGLE BEHIND THE STICK
	LDR R10,=BLACK
	MOV R3,#0
	MOV R4,#219
	BL TFT_DRAW_RECTANGLE
	@GET THE CURRENT STICK POSITION
	LDR R5,=PONG_OSP
	LDRB R5,[R5]
	@CHECK IF EXPANDED OR NOT
	LDR R6,=PONG_EXPAND
	LDRB R6,[R6]
	CMP R6,#255
	@IF NOT 255, IT MEANS THAT IT IS EXPANDED
	BNE PONG_DrawMapExpandOS
	@IF = 255, IT MEANS THAT IT IS NOT EXPANDED
	SUB R3,R5,#15
	ADD R4,R5,#15
	@SKIP THE EXPANDED
	B PONG_DrawMapNEOS
@DRAW EXPAND OUR STICK LABEL
PONG_DrawMapExpandOS:
	SUB R3,R5,#20
	ADD R4,R5,#20
	B PONG_DrawMapNEOS
@NOT EXPANDED OUR STICK EXPAND
PONG_DrawMapNEOS:
	LDR R10,=WHITE
	BL TFT_DRAW_RECTANGLE
	@SET THE OUR STICK MOVE CONDITION TO 0
	LDR R0,=PONG_OSPM
	LDR R1,=0
	STRB R1,[R0]
	@JUMP TO THE NEXT DRAWING
	B PONG_DrawMapDDOS
PONG_DrawMapDDOS:	@DRAW ENEMY STICK
	@CHECK IF ENEMY STICK MOVED OR NOT
	LDR R0,=PONG_ESPM
	LDRB R5,[R0]
	CMP R5,#0
	@IF EQUAL TO 0, MEANS IT DIDN'T MOVE
	BEQ PONG_DrawMapDDES
	@IF NOT, MEANS IT MOVED
	@X0 AND X1 ARE CONSTANT 5 TO 10
	MOV R0,#309
	MOV R1,#314
	@DRAW A RECTANGLE BEHIND THE STICK
	LDR R10,=BLACK
	MOV R3,#0
	MOV R4,#219
	BL TFT_DRAW_RECTANGLE
	@GET THE CURRENT STICK POSITION
	MOV R0,#309
	LDR R5,=PONG_ESP
	LDRB R5,[R5]
	SUB R3,R5,#15
	ADD R4,R5,#15
	LDR R10,=WHITE
	BL TFT_DRAW_RECTANGLE
	@SET THE ENEMY STICK MOVE CONDITION TO 0
	LDR R0,=PONG_ESPM
	LDR R1,=0
	STRB R1,[R0]
	@JUMP TO THE NEXT DRAWING
	B PONG_DrawMapDDES
PONG_DrawMapDDES:	@DRAW BALL
	@CHECK IF BALL MOVED OR NOT
	LDR R0,=PONG_BPM
	LDRB R1,[R0]
	CMP R1,#0
	@IF EQUAL 0, MEANS IT DIDN'T MOVE
	BEQ PONG_DrawMapDDB
	@SET THE BALL MOVE CONDITION TO 0
	LDR R5,=PONG_BPM
	LDR R10,=0
	STRB R10,[R5]
	@GET THE PERVIOUS X POSITION OF THE BALL
	LDR R5,=PONG_BPXP
	LDRH R5,[R5]
	@CALCULATE THE REQUIRED PARAMETERS OF X
	SUB R0,R5,#4
	ADD R1,R5,#4
	@GET THE PERVIOUS Y POSITION OF THE BALL
	LDR R5,=PONG_BPYP
	LDRB R5,[R5]
	@CALCULATE THE REQUIRED PARAMETERS OF Y
	SUB R3,R5,#4
	ADD R4,R5,#4
	@DRAW A BLACK RECTANGLE TO HIDE THE PERIVOUS BALL
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE
	@GET THE CURRENT X AND Y POSITION OF THE BALL AND DRAW A CIRCLE
	LDR R5,=PONG_BXP
	LDRH R5,[R5]
	LDR R6,=PONG_BYP
	LDRB R6,[R6]
	LDR R7,=4
	LDR R10,=BLUE
	BL TFT_DRAW_CIRCLE
PONG_DrawMapDDB:	@DRAW NUMBER
	LDR R3,=220
	LDR R4,=239
	LDR R10,=WHITE
	LDR R11,=RED
	@DISPLAY THE HUNDREDS
	LDR R0,=15
	LDR R1,=24
	BL TFT_SET_DRAWING_AREA
	LDR R2,=PONG_SCORE
	LDRB R1,[R2]
	BL TFT_DISPLAY_DIGIT
	@DISPLAY THE TENS
	LDR R0,=28
	LDR R1,=37
	BL TFT_SET_DRAWING_AREA
	ADD R2,R2,#1
	LDRB R1,[R2]
	BL TFT_DISPLAY_DIGIT
	@DISPLAY THE ONES
	LDR R0,=41
	LDR R1,=50
	BL TFT_SET_DRAWING_AREA
	ADD R2,R2,#1
	LDRB R1,[R2]
	BL TFT_DISPLAY_DIGIT

	POP {R0-R7,R10,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@MOVE OUR STICK DOWN FUNCTION, SHOULD BE CALLED IN EXTI1 (DOWN BUTTON)
PONG_MoveOSDown:
	PUSH {R0,R1,LR}
	@SET THE CONDITION OF MOVING
	LDR R0,=PONG_OSPM
	LDR R1,=1
	STRB R1,[R0]
	@CHECK IF EXPANDED OR NOT
	LDR R0,=PONG_EXPAND
	LDRB R0,[R0]
	CMP R0,#255
	@IF NOT = 255, THEN IT IS EXPANDED
	BNE PONG_MoveOSDownEXPANDED
	@GET THE CURRENT OUR STICK POSITION
	LDR R0,=PONG_OSP
	LDRB R1,[R0]
	CMP R1,#25
	@IF IT IS HIGHER THAN OR EQUAL (HALF THE SIZE)+(STEP), THEN MOVE NORMALLY
	BHS PONG_MoveOSDownDN
	@IF IT IS NOT, CHECK THAT IT IS HIGHER THAN (HALF THE SIZE)
	CMP R1,#15
	@IF HIGHER THAN 15, IT CAN MOVE A LITTLE MORE (LESS THAN STEP)
	BHI PONG_MoveOSDownDF
	@IF IT IS LOWER OR EQUAL HALF THE SIZE, IT IS ALREADY AT MOST DOWN
	B PONG_MoveOSDownEF
@DRAW NORMALLY LABEL
PONG_MoveOSDownDN:
	@SUBTRACT THE STEP
	SUB R1,R1,#10
	STRB R1,[R0]
	B PONG_MoveOSDownEF
@DRAW BY FORCE LABEL
PONG_MoveOSDownDF:
	@PUT EXACTLY HALF THE SIZE IN THE POSITION
	MOV R1,#15
	STRB R1,[R0]
	B PONG_MoveOSDownEF
PONG_MoveOSDownEXPANDED:
	@GET THE CURRENT OUR STICK POSITION
	LDR R0,=PONG_OSP
	LDRB R1,[R0]
	CMP R1,#30
	@IF IT IS HIGHER THAN OR EQUAL (HALF THE SIZE)+(STEP), THEN MOVE NORMALLY
	BHS PONG_MoveOSDownDNE	@IF IT IS NOT, CHECK THAT IT IS HIGHER THAN (HALF THE SIZE)
	CMP R1,#20
	@IF HIGHER THAN 20, IT CAN MOVE A LITTLE MORE (LESS THAN STEP)
	BHI PONG_MoveOSDownDFE
	@IF IT IS LOWER OR EQUAL HALF THE SIZE, IT IS ALREADY AT MOST DOWN
	B PONG_MoveOSDownEF
@DRAW NORMALLY LABEL
PONG_MoveOSDownDNE:
	@SUBTRACT THE STEP
	SUB R1,R1,#10
	STRB R1,[R0]
	B PONG_MoveOSDownEF
@DRAW BY FORCE LABEL
PONG_MoveOSDownDFE:
	@PUT EXACTLY HALF THE SIZE IN THE POSITION
	MOV R1,#20
	STRB R1,[R0]
	B PONG_MoveOSDownEF
@END FUNCTION LABEL
PONG_MoveOSDownEF:
	POP {R0,R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@MOVE OUR STICK UP FUNCTION, SHOULD BE CALLED IN EXTI0 (UP BUTTON)
PONG_MoveOSUp:
	PUSH {R0,R1,LR}
	@SET THE CONDITION OF MOVING
	LDR R0,=PONG_OSPM
	LDR R1,=1
	STRB R1,[R0]
	@GET THE CURRENT OUR STICK POSITION
	@CHECK IF EXPANDED OR NOT
	LDR R0,=PONG_EXPAND
	LDRB R0,[R0]
	CMP R0,#255
	@IF NOT = 255, THEN IT IS EXPANDED
	BNE PONG_MoveOSUpEXPANDED
	LDR R0,=PONG_OSP
	LDRB R1,[R0]
	CMP R1,#194
	@IF IT IS LOWER THAN OR EQUAL (MAX SCREEN) - (HALF THE SIZE + STEP), THEN MOVE NORMALLY
	BLS PONG_MoveOSUpDNE
	@IF IT IS NOT, CHECK THAT IT IS LOWER THAN (MAX SCREEN) - (HALF THE SIZE)
	CMP R1,#204
	@IF LOWER THAN 204, IT CAN MOVE A LITTLE MORE (LESS THAN STEP)
	BLO PONG_MoveOSUpDFE
	@IF IT IS HIGHER OR EQUAL (MAX SCREEN) - (HALF THE SIZE), IT IS ALREADY AT MOST UP
	B PONG_MoveOSUpEF
@DRAW NORMALLY LABEL
PONG_MoveOSUpDN:
	@ADD THE STEP
	ADD R1,R1,#10
	STRB R1,[R0]
	B PONG_MoveOSUpEF
@DRAW BY FORCE LABEL
PONG_MoveOSUpDF:
	@PUT EXACTLY (MAX SCREEN) - (HALF THE SIZE)
	MOV R1,#204
	STRB R1,[R0]
	B PONG_MoveOSUpEF
PONG_MoveOSUpEXPANDED:
	LDR R0,=PONG_OSP
	LDRB R1,[R0]
	CMP R1,#189
	@IF IT IS LOWER THAN OR EQUAL (MAX SCREEN) - (HALF THE SIZE + STEP), THEN MOVE NORMALLY
	BLS PONG_MoveOSUpDNE
	@IF IT IS NOT, CHECK THAT IT IS LOWER THAN (MAX SCREEN) - (HALF THE SIZE)
	CMP R1,#199
	@IF LOWER THAN 204, IT CAN MOVE A LITTLE MORE (LESS THAN STEP)
	BLO PONG_MoveOSUpDFE
	@IF IT IS HIGHER OR EQUAL (MAX SCREEN) - (HALF THE SIZE), IT IS ALREADY AT MOST UP
	B PONG_MoveOSUpEF
@DRAW NORMALLY LABEL
PONG_MoveOSUpDNE:
	@ADD THE STEP
	ADD R1,R1,#10
	STRB R1,[R0]
	B PONG_MoveOSUpEF
@DRAW BY FORCE LABEL
PONG_MoveOSUpDFE:
	@PUT EXACTLY (MAX SCREEN) - (HALF THE SIZE)
	MOV R1,#199
	STRB R1,[R0]
	B PONG_MoveOSUpEF
@END FUNCTION LABEL
PONG_MoveOSUpEF:
	POP {R0,R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@MOVE ENEMY STICK FUNCTION, SHOULD BE CALLED IN TIM3 (TIMER ENEMY STICK)
PONG_MoveES:
	PUSH {R0,R1,R2,R3,LR}
	@SET THE CONDITION OF MOVING
	LDR R0,=PONG_ESPM
	LDR R1,=1
	STRB R1,[R0]
	@GET THE CURRENT ENEMY STICK POSITION
	LDR R0,=PONG_ESP
	LDRB R1,[R0]
	@GET THE CURRENT BALL Y POSITION
	LDR R2,=PONG_BYP
	LDRB R2,[R2]
	SUB R3,R1,#15
	@IF ENEMY STICK - 15 > BALL Y, MOVE DOWN
	CMP R3,R2
	BHI PONG_MoveESD
	ADD R3,R1,#15
	@IF NOT, CHECK IF ENEMY STICK + 15 < BALL Y, THEN MOVE UP
	CMP R3,R2
	BLO PONG_MoveESU
	@IF NOT BOTH, DO NOTHING
	B PONG_MoveESEF
@MOVE DOWN LABEL
PONG_MoveESD:
	@ENEMY STICK POSITION IS ALREADY IN R1 AND ITS ADDRESS IN R0
	CMP R1,#25
	@IF IT IS HIGHER THAN OR EQUAL (HALF THE SIZE)+(STEP), THEN MOVE NORMALLY
	BHS PONG_MoveESDownDN
	@IF IT IS NOT, CHECK THAT IT IS HIGHER THAN (HALF THE SIZE)
	CMP R1,#15
	@IF HIGHER THAN 15, IT CAN MOVE A LITTLE MORE (LESS THAN STEP)
	BHI PONG_MoveESDownDF
	@IF IT IS LOWER OR EQUAL HALF THE SIZE, IT IS ALREADY AT MOST DOWN
	B PONG_MoveESEF
@DOWN DRAW NORMALLY LABEL
PONG_MoveESDownDN:
	SUB R1,R1,#10
	STRB R1,[R0]
	B PONG_MoveESEF
@DOWN DRAW BY FORCE LABEL
PONG_MoveESDownDF:
	@PUT EXACTLY HALF THE SIZE IN THE POSITION
	MOV R1,#15
	STRB R1,[R0]
	B PONG_MoveESEF
@MOVE UP LABEL
PONG_MoveESU:
	@ENEMY STICK POSITION IS ALREADY IN R1 AND ITS ADDRESS IN R0
	CMP R1,#194
	@IF IT IS HIGHER THAN OR EQUAL (HALF THE SIZE)+(STEP), THEN MOVE NORMALLY
	BLS PONG_MoveESUpDN
	@IF IT IS NOT, CHECK THAT IT IS HIGHER THAN (HALF THE SIZE)
	CMP R1,#204
	@IF HIGHER THAN 15, IT CAN MOVE A LITTLE MORE (LESS THAN STEP)
	BLO PONG_MoveESDownDF
	@IF IT IS LOWER OR EQUAL HALF THE SIZE, IT IS ALREADY AT MOST DOWN
	B PONG_MoveESEF
@UP DRAW NORMALLY LABEL
PONG_MoveESUpDN:
	ADD R1,R1,#10
	STRB R1,[R0]
	B PONG_MoveESEF
@UP DRAW BY FORCE LABEL
PONG_MoveESUpDF:
	@PUT EXACTLY HALF THE SIZE IN THE POSITION
	MOV R1,#204
	STRB R1,[R0]
	B PONG_MoveESEF
@END FUNCTION LABEL
PONG_MoveESEF:
	POP {R0,R1,R2,R3,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@MOVE BALL FUNCTION, SHOULD BE CALLED IN TIM2 (TIMER MOVING BALL)
PONG_MoveBall:
	PUSH {R0,R1,R2,LR}
	@SET THE CONDITION OF MOVING
	LDR R0,=PONG_BPM
	MOV R1,#1
	STRB R1,[R0]
	@GET THE CURRENT X POSITION OF THE BALL
	LDR R0,=PONG_BXP
	LDRH R1,[R0]
	CMP R1,#15
	@IF LOWER THAN OR EQUAL 15, MEANS IT HIT THE LEFT END OF THE GAME
	BLS PONG_MoveBallHOS
	@IF HIGHER THAN OR EQUAL 304, MEANS IT HIT THE RIGHT END OF THE GAME
	CMP R1,#304
	BHS PONG_MoveBallHES
	@IF NEITHER, THEN IT MEANS THAT THE BALL IS SOMEWHERE IN BETWEEN
	LDR R0,=PONG_BXD
	LDRB R0,[R0]
	@CHECK THE X DIRECTION
	CMP R0,#0
	@IF EQUAL 0, IT MEANS THAT IT IS MOVING LEFT
	BEQ PONG_MoveBallL
	@IF NOT 0, IT MEANS THAT IT IS MOVING RIGHT
	B PONG_MoveBallR
@HIT OUR STICK LABEL
PONG_MoveBallHOS:
	@CHECK WHETHER IT HITS OUR STICK, OR IT IS A GOAL
	LDR R0,=PONG_OSP
	LDRB R0,[R0]
	LDR R1,=PONG_BYP
	LDRB R1,[R1]
	@CHECK IF THE EXPAND POWERUP IS ON
	LDR R2,=PONG_EXPAND
	LDRB R3,[R2]
	@IF = 255, THEN THERE IS NO POWERUP
	CMP R3,#255
	@IF NOT, JUMP TO EXPAND FUNCTION
	BNE PONG_MoveBallEXPAND
	SUB R0,R0,#15
	@IF BALL Y <= OUR STICK - 20, THEN IT IS A LOSE
	CMP R1,R0
	BLS PONG_MoveBallLOSE
	@IF NOT, CHECK ABOVE
	ADD R0,R0,#30
	@IF BALL Y >= OUR STICK + 20, THEN IT IS A LOSE
	CMP R1,R0
	BHS PONG_MoveBallLOSE
	LDR R2,=1
	BL PONG_IncrementScore
	@IF NOT, THEN IT HITS OUR STICK, SO CHANGE IT'S DIRECTION TO RIGHT
	LDR R0,=PONG_BXD
	MOV R1,#1
	STRB R1,[R0]
	@JUMP TO MOVE RIGHT
	B PONG_MoveBallR
@EXPAND HIT OUR STICK LABEL
PONG_MoveBallEXPAND:
	SUB R3,R3,#1
	CMP R3,#0
	BEQ PONG_MoveBallESZ
	STRB R3,[R2]
	B PONG_MoveBallEM
@EXPAND SET ZERO LABEL
PONG_MoveBallESZ:
	LDR R3,=0
	STRB R3,[R2]
	B PONG_MoveBallEM
@EXPAND MOVE LABEL
PONG_MoveBallEM:
	SUB R0,R0,#20
	@IF BALL Y <= OUR STICK - 35, THEN IT IS A LOSE
	CMP R1,R0
	BLS PONG_MoveBallLOSE
	@IF NOT, CHECK ABOVE
	ADD R0,R0,#40
	@IF BALL Y >= OUR STICK + 35, THEN IT IS A LOSE
	CMP R1,R0
	BHS PONG_MoveBallLOSE
	LDR R2,=1
	BL PONG_IncrementScore
	@IF NOT, THEN IT HITS OUR STICK, SO CHANGE IT'S DIRECTION TO RIGHT
	LDR R0,=PONG_BXD
	MOV R1,#1
	STRB R1,[R0]
	@JUMP TO MOVE RIGHT
	B PONG_MoveBallR
@HIT ENEMY STICK LABEL
PONG_MoveBallHES:
	@CHECK WHETHER IT HITS ENEMY STICK, OR IT IS A GOAL
	LDR R0,=PONG_ESP
	LDRB R0,[R0]
	LDR R1,=PONG_BYP
	LDRB R1,[R1]
	SUB R0,R0,#20
	@IF BALL Y <= ENEMY STICK - 20, THEN IT IS A WIN
	CMP R1,R0
	BLS PONG_MoveBallWIN
	@IF NOT, CHECK ABOVE
	ADD R0,R0,#40
	@IF BALL Y >= ENEMY STICK + 20, THEN IT IS A WIN
	CMP R1,R0
	BHS PONG_MoveBallWIN
	@IF NOT, THEN IT HITS ENEMY STICK, SO CHANGE IT'S DIRECTION TO LEFT
	LDR R0,=PONG_BXD
	MOV R1,#0
	STRB R1,[R0]
	@JUMP TO MOVE LEFT
	B PONG_MoveBallL
@MOVE LEFT LABEL
PONG_MoveBallL:
	@GET THE CURRENT BALL X POSITION
	LDR R0,=PONG_BXP
	LDRH R1,[R0]
	@PUT IT IN THE BALL PERVIOUS X POSITION
	LDR R2,=PONG_BPXP
	STRH R1,[R2]
	@IF GREATER THAN OR EQUAL 23, THEN IT CAN MOVE NORMALLY TO 15
	CMP R1,#23
	BHS PONG_MoveBallLNS
	@IF NOT, THEN JUST PUT 15
	MOV R1,#15
	STRH R1,[R0]
	@CONTINUE TO MOVE IN Y
	B PONG_MoveBallCAX
@LEFT NORMAL SUBTRACT LABEL
PONG_MoveBallLNS:
	@SUBTRACT AND STORE THE VALUE
	SUB R1,R1,#8
	STRH R1,[R0]
	@CONTINUE TO MOVE IN Y
	B PONG_MoveBallCAX
@MOVE RIGHT LABEL
PONG_MoveBallR:
	@GET THE CURRENT BALL X POSITION
	LDR R0,=PONG_BXP
	LDRH R1,[R0]
	@PUT IT IN THE BALL PERVIOUS X POSITION
	LDR R2,=PONG_BPXP
	STRH R1,[R2]
	@IF LESS THAN OR EQUAL 296, THEN IT CAN MOVE NORMALLY TO 304
	CMP R1,#296
	BLS PONG_MoveBallRNA
	@IF NOT, THEN JUST PUT 304
	MOV R1,#304
	STRH R1,[R0]
	@CONTINUE TO MOVE IN Y
	B PONG_MoveBallCAX
@RIGHT NORMAL ADD LABEL
PONG_MoveBallRNA:
	@ADD AND STORE THE VALUE
	ADD R1,R1,#8
	STRH R1,[R0]
	@CONTINUE TO MOVE IN Y
	B PONG_MoveBallCAX
@CONTINUE AFTER X LABEL
PONG_MoveBallCAX:
	@GET THE CURRENT BALL X POSITION
	LDR R0,=PONG_BYP
	LDRB R1,[R0]
	@IF HIGHER THAN 212, IT MEANS THAT IT HITS THE CEILING
	CMP R1,#212
	BHI PONG_MoveBallHC
	@IF IT IS LOWER THAN 7, IT MEANS THAT IT HITS THE FLOOR
	CMP R1,#7
	BLO PONG_MoveBallHF
	@IF NEITHER, THEN IT MEANS THAT THE BALL IS SOMEWHERE IN BETWEEN
	LDR R0,=PONG_BYD
	LDRB R0,[R0]
	@CHECK THE Y DIRECTION
	CMP R0,#0
	@IF EQUAL 0, IT MEANS THAT IT IS MOVING DOWN
	BEQ PONG_MoveBallD
	@IF NOT 0, IT MEANS THAT IT IS MOVING UP
	B PONG_MoveBallU
@HIT FLOOR LABEL
PONG_MoveBallHF:
	@CHANGE THE DIRECTION TO UP
	LDR R0,=PONG_BYD
	MOV R1,#1
	STRB R1,[R0]
	@JUMP TO MOVE UP
	B PONG_MoveBallU
@HIT CEILING LABEL
PONG_MoveBallHC:
	@CHANGE THE DIRECTION TO DOWN
	LDR R0,=PONG_BYD
	MOV R1,#0
	STRB R1,[R0]
	@JUMP TO MOVE DOWN
	B PONG_MoveBallD
@MOVE DOWN LABEL
PONG_MoveBallD:
	@GET THE Y POSITION
	LDR R0,=PONG_BYP
	LDRB R1,[R0]
	@PUT IT IN THE PERIVOUS Y POSITION
	LDR R2,=PONG_BPYP
	STRB R1,[R2]
	@SUBTRACT AND STORE
	SUB R1,R1,#8
	STRB R1,[R0]
	@END FUNCTION HERE
	B PONG_MoveBallCAY
@MOVE UP LABEL
PONG_MoveBallU:
	@GET THE Y POSITION
	LDR R0,=PONG_BYP
	LDRB R1,[R0]
	@PUT IT IN THE PERIVOUS Y POSITION
	LDR R2,=PONG_BPYP
	STRB R1,[R2]
	@ADD AND STORE
	ADD R1,R1,#8
	STRB R1,[R0]
	@END FUNCTION HERE
	B PONG_MoveBallCAY
@WIN LABEL
PONG_MoveBallWIN:
	@CALL INCREMENTER
	LDR R2,=10
	BL PONG_IncrementScore
	@GET THE X POSITION
	LDR R0,=PONG_BXP
	LDRH R1,[R0]
	@STORE IT IN THE PERIVOUS X POSITION
	LDR R2,=PONG_BPXP
	STRH R1,[R2]
	@RESET TO POSITION 160 IN X
	MOV R1, #160
	STRH R1,[R0]
	@GET THE Y POSITION
	LDR R0,=PONG_BYP
	LDRB R1,[R0]
	@STORE IT IN THE PERIVOUS Y POSITION
	LDR R2,=PONG_BPYP
	STRB R1,[R2]
	@RESET TO POSITION 110 IN Y
	MOV R1,#110
	STRB R1,[R0]
	@END FUNCTION HERE
	B PONG_MoveBallCAY
@LOSE LABEL
PONG_MoveBallLOSE:
	@DECREMENT THE SCORE BY 10
	BL PONG_DecrementScore
	@GET THE X POSITION
	LDR R0,=PONG_BXP
	LDRH R1,[R0]
	@STORE IT IN THE PERIVOUS X POSITION
	LDR R2,=PONG_BPXP
	STRH R1,[R2]
	@RESET TO POSITION 160 IN X
	MOV R1, #160
	STRH R1,[R0]
	@GET THE Y POSITION
	LDR R0,=PONG_BYP
	LDRB R1,[R0]
	@STORE IT IN THE PERIVOUS Y POSITION
	LDR R2,=PONG_BPYP
	STRB R1,[R2]
	@RESET TO POSITION 110 IN Y
	MOV R1,#110
	STRB R1,[R0]
	@END FUNCTION HERE
	B PONG_MoveBallCAY
@CONTINUE AFTER Y LABEL
PONG_MoveBallCAY:
	POP {R0,R1,R2,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.ltorg
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@INCREMENT SCORE FUNCTION
@USES R2 AS THE VALUE TO INCREMENT
PONG_IncrementScore:
	PUSH {R0,R1,R2,LR}
	@CHECK WHETHER THE ADDITION TO THE SCORE = 1 OR 10
	CMP R2,#10
	BEQ PONG_IncrementScore10
	@IF NOT 10, ADD BY 1
	LDR R0,=PONG_POWERSCORE
	LDRB R1,[R0]
	ADD R1,R1,#1
	STRB R1,[R0]
	LDR R0,=PONG_SCORE
	LDRB R1,[R0,#2]!
	@CHECK FOR THE ONES
	CMP R1,#9
	@IF 9, THEN IT SHOULD BE 0 AND INCREMENT THE TENS
	BEQ PONG_IncrementScore10R
	@IF NOT, THEN JUST ADD 1
	ADD R1,R1,#1
	STRB R1,[R0]
	@JUMP TO THE FINISH
	B PONG_IncrementScoreEND
@RESET THE ONES LABEL
PONG_IncrementScore10R:
	LDR R1,=0
	STRB R1,[R0]
	@THEN ADD THE TENS
	B PONG_IncrementScore10N
@ADD THE TENS LABEL
PONG_IncrementScore10:
	LDR R0,=PONG_POWERSCORE
	LDRB R1,[R0]
	ADD R1,R1,#10
	STRB R1,[R0]
PONG_IncrementScore10N:
	@FASTEN THE BALL
	LDR R0,=PONG_BALLSPEED
	@GET THE CURRENT SPEED
	LDR R2,[R0]
	@DECREMENT IT BY 20000 TICKS
	LDR R1,=20000
	SUB R2,R2,R1
	STR R2,[R0]
	BL TIM2_START_IT
	LDR R0,=PONG_SCORE
	ADD R0,R0,#1
	LDRB R1,[R0]
	@CHECK FOR THE TENS
	CMP R1,#9
	@IF 9, THEN IT SHOULD BE 0 AND INCREMENT THE HUNDREDS
	BEQ PONG_IncrementScore100R
	@IF NOT, THEN JUST ADD 1
	ADD R1,R1,#1
	STRB R1,[R0]
	@JUMP TO THE FINISH
	B PONG_IncrementScoreEND
@RESET THE TENS LABEL
PONG_IncrementScore100R:
	LDR R1,=0
	STRB R1,[R0]
	@THEN ADD THE HUNDREDS
	B PONG_IncrementScore100
@ADD THE HUNDREDS LABEL
PONG_IncrementScore100:
	LDR R0,=PONG_SCORE
	LDRB R1,[R0]
	@ADD 1 TO THE HUNDREDS
	ADD R1,R1,#1
	STRB R1,[R0]
	@JUMP TO THE FINISH
	B PONG_IncrementScoreEND
PONG_IncrementScoreEND:
	BL PONG_CheckPowerUp
	POP {R0,R1,R2,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@DECREMENTT SCORE FUNCTION
PONG_DecrementScore:
	PUSH {R0,R1,LR}
	@GET THE ADDRESS OF THE TENS
	LDR R0,=PONG_SCORE
	ADD R0,R0,#1
	LDRB R1,[R0]
	@IF 0, THEN WE SHALL DECREMENT FROM THE HUNDREDS
	CMP R1,#0
	BEQ PONG_DecrementScore100
	@IF NOT, SIMPLY DECREMENT FROM THE TENS
	SUB R1,R1,#1
	STRB R1,[R0]
	@JUMP TO THE FINISH
	B PONG_DecrementScoreEND
@DECREMENT 100 LABEL
PONG_DecrementScore100:
	@GET THE ADDRESS OF THE HUNDREDS
	SUB R0,R0,#1
	LDRB R1,[R0]
	@IF = 0 AS WELL, THEN MAKE THE SCORE = 0
	CMP R1,#0
	BEQ PONG_DecrementScoreTerminate
	@IF NOT, DECREMENT FROM THE HUNDREDS
	SUB R1,R1,#1
	STRB R1,[R0]
	@THEN PUT 9 IN THE TENS
	LDR R1,=9
	STRB R1,[R0,#1]!
	@JUMP TO THE FINISH
	B PONG_DecrementScoreEND
@MAKE THE SCORE = 0
PONG_DecrementScoreTerminate:
	ADD R0,R0,#2
	LDR R1,=0
	STRB R1,[R0]
	@JUMP TO THE FINISH
	B PONG_DecrementScoreEND
PONG_DecrementScoreEND:
	POP {R0,R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@CHECK IF POWERUP IS AVAILABLE
PONG_CheckPowerUp:
	PUSH {R0,R1,LR}
	@IF NOT EQUAL 5, DO NOT GIVE ANY POWER
	LDR R0,=PONG_POWERSCORE
	LDRB R1,[R0]
	CMP R1,#5
	BNE PONG_CheckPowerEND
	@IF 25, RESET AND GIVE POWER UP
	LDR R1,=0
	STRB R1,[R0]
	@IF NO POWERUP WAS GIVEN BEFORE, GIVE FREEZE
	LDR R0,=PONG_POWER
	LDRB R1,[R0]
	CMP R1,#0
	BEQ PONG_CheckPowerUpGiveFreeze
	@IF LAST POWER WAS EXPAND, GIVE FREEZE
	CMP R1,#2
	BEQ PONG_CheckPowerUpGiveFreeze
	@STORE THE LAST PERVIOUS POWER (2 --> EXPAND)
	LDR R1,=2
	STRB R1,[R0]
	@GIVE POWER UP EXPANSION
	LDR R0,=PONG_EXPAND
	LDR R1,=4
	STRB R1,[R0]
	B PONG_CheckPowerEND
@GIVE FREEZE LABEL
PONG_CheckPowerUpGiveFreeze:
	@STORE THE LAST PERVIOUS POWER (1 --> FREEZE)
	LDR R1,=1
	STRB R1,[R0]
	@GIVE POWER UP FREEZE
	LDR R0,=PONG_FREEZE
	LDR R1,=50
	STRB R1,[R0]
@FUNCTION END LABEL
PONG_CheckPowerEND:
	POP {R0,R1,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ PACMAN GAME @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ PACMAN GAME @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@width 231, height 231, block 11*11,padding (bottom:5, top:4)
PACMAN_INIT:
	PUSH {R0-R12,LR}
	LDR R10,=BLACK
	LDR R0,=0
	LDR R1,=320
	LDR R3,=0
	LDR R4,=240
	BL TFT_DRAW_RECTANGLE

@ Draw the pacman map

	LDR r5,=PacmanByteMapping
   	LDR r0,=1
	LDR r1,=12
	LDR r3,=5
	LDR r4,=16
ReadAndDisplay:
	LDRB r6,[r5]

	BL SELECT_BLOCK

	ADD r5,r5,#1
	ADD r0,r0,#11
	ADD r1,r1,#11
	CMP r0,#232
	BNE ReadAndDisplay
	LDR r0,=1
	LDR r1,=12
	ADD r3,r3,#11
	ADD r4,r4,#11
	CMP r3,#236
	BNE ReadAndDisplay

	LDR r0,=PacmanInitialX
	LDR r3,=PacmanInitialY
	BL PACMAN_DrawPacman @Draw pacman

	LDR r0,=GhostInitialX
	ADD r1,r0,#11
	LDR r3,=GhostInitialY
	ADD r4,r3,#11
	BL PACMAN_DrawGhost @Draw Ghost

@ Draw score

	BL DISPLAY_SCORE_PACMAN

@ Draw lives

	BL PACMAN_DRAW_LIVES

	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Draw Lives @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_DRAW_LIVES:
	PUSH {R0-R12,LR}

	LDR R0,=300
	LDR R1,=320
	LDR R3,=120
	LDR R4,=180
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE

	LDR r10,=YELLOW
	LDR r7,=7
	LDR R5,=LivesX
	LDR r6,=LivesY

	LDR R0,=lives
	LDRB R1,[R0]


lives_DRAW_LOOP:
	CMP R1,#0
	BEQ	END_Lives_DRAW_LOOP
	BL TFT_DRAW_CIRCLE
	SUB R6,R6,#20
	SUB R1,R1,#1
	B lives_DRAW_LOOP


END_Lives_DRAW_LOOP:

	LDR R0,=0
	LDR R1,=1
	LDR R3,=0
	LDR R4,=1
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE

	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@Select which block to draw in the map
SELECT_BLOCK:
@GOTO Draw wall
	PUSH {R6,LR}
	CMP r6,'#'
	BNE NotHash
	BL PACMAN_DrawWall
	B NotAny
NotHash:
@GOTO Draw empty space
	CMP r6,' '
    BNE NotSpace
	BL PACMAN_DrawEmpty
	B NotAny
NotSpace:
@GOTO Draw pellet
	CMP r6,'.'
	BNE NotDot
	BL PACMAN_DrawPellet
	B NotAny
NotDot:
@GOTO Draw power pellet
	CMP r6,'@'
	BNE NotAny
	BL PACMAN_DrawPowerPellet
	B NotAny
NotAny:
@if symbol does not exist in array
	POP {R6,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_DrawWall:
@ Draw wall on screen
	PUSH {R0,R3,R10,LR}
	LDR r10,=BLUE
	ADD r0,r0,#1
	ADD r3,r3,#1
	BL TFT_DRAW_RECTANGLE
	POP {R0,R3,R10,PC}
PACMAN_DrawEmpty:
@ Draw empty on screen
	PUSH {R0,R3,R10,LR}
	LDR r10,=BLACK
	ADD r0,r0,#1
	ADD r3,r3,#1
	BL TFT_DRAW_RECTANGLE
	POP {R0,R3,R10,PC}
PACMAN_DrawPellet:
@ Draw pellet on screen
	PUSH {R0-R4,R10,LR}
	LDR r10,=WHITE
   	ADD r0,r0,#5
	SUB r1,r1,#5
	ADD r3,r3,#5
	SUB r4,r4,#5
	BL TFT_DRAW_RECTANGLE
	POP {R0-R4,R10,PC}
PACMAN_DrawPowerPellet:
@ Draw power pellet on screen
	PUSH {R0-R4,R10,LR}
	LDR r10,=WHITE
   	ADD r0,r0,#4
	SUB r1,r1,#4
	ADD r3,r3,#4
	SUB r4,r4,#4
	BL TFT_DRAW_RECTANGLE
	POP {R0-R4,R10,PC}
PACMAN_DrawPacman:
@ Draw pacman on screen
	PUSH {R5-R7,R10,LR}
	LDR r10,=YELLOW
	ADD r5,r0,#6
	ADD r6,r3,#6
	LDR r7,=4
	BL TFT_DRAW_CIRCLE
	POP {R5-R7,R10,PC}
PACMAN_DrawGhost:
@ Draw ghost on screen
	PUSH {R0-R10,LR}
	LDR R9,=frightened
	LDRB R8,[R9]
	CMP R8,#0
	BNE PACMAN_GHOST_BLUE
	LDR r10,=RED
	B PACMAN_GHOST_RED
PACMAN_GHOST_BLUE:
	LDR R10,=CYAN
	B PACMAN_GHOST_RED
PACMAN_GHOST_RED:
	ADD r5,r0,#6
	ADD r6,r3,#6
	LDR r7,=4
	BL TFT_DRAW_CIRCLE
	ADD R0,R0,#2
	SUB R1,R1,#1
	ADD R3,R3,#2
	SUB R4,R4,#5
	BL TFT_DRAW_RECTANGLE

	LDR R0,=0
	LDR R1,=1
	LDR R3,=0
	LDR R4,=1
	LDR R10,=BLACK
	BL TFT_DRAW_RECTANGLE

	POP {R0-R10,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@                                                                         @
@  In data array:                                                         @
@                             BOTTOM                                      @
@                               ||                                        @
@                               ||                                        @
@              left   <---             --->  right                        @
@                               ||                                        @
@                               ||                                        @
@                               UP                                        @
@                                                                         @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@ MOVE PACMAN @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_RIGHT:

	PUSH {R0-R11,LR}

	LDR R5,=PacmanByteMapping	@load array start
	LDR R8,=Pacmanloction		@load pacman location in array
	LDR R11,=pellets_count

	LDRH R1,[R8]
	ADD R1,R1,#1				@See what is the block to the right to pacman
	ADD R5,R5,R1

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ M_R_SKIP				@See if wall

	CMP R6,'.'
	BNE POWER_PELLET_MR
	BL INCREASE_SCORE_PM		@See if pellet
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE POWER_PELLET_MR
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

POWER_PELLET_MR:
	CMP R6,'@'
	BNE M_R_NOSKIP
	LDR R7,=Ghostlocation
	LDR R9,=0
	STRH R9,[R7,#6]
	LDR R7,=frightened
	LDR R9,=1
	STRB R9,[R7]
	BL INCREASE_SCORE_PM_10		@See if power pellet
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE M_R_NOSKIP
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

M_R_NOSKIP:
	STRH R1,[R8]
	LDR R1,=1					@Set direction flag to right
	STRH R1,[R8,#6]
	LDR R1,=32
	STRB R1,[R5]				@ Place empty space in array

	B M_R_SKIP

M_R_SKIP:

	POP {R0-R11,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_RIGHT_DRAW:

	PUSH {R0-R5,LR}

	LDR R5,=Pacmanloction

	ADD R5,R5,#2
	LDRH R0,[R5]
	ADD R5,R5,#2
	LDRH R3,[R5]

	ADD R1,R0,#11
	ADD R4,R3,#11

	BL PACMAN_DrawEmpty

	ADD R0,R0,#11
	ADD R1,R1,#11

	BL PACMAN_DrawPacman

	STRH R3,[R5]
	SUB R5,R5,#2
	STRH R0,[R5]

	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_LEFT:

	PUSH {R0-R11,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Pacmanloction
	LDR R11,=pellets_count

	LDRH R1,[R8]
	SUB R1,R1,#1
	ADD R5,R5,R1

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ M_L_SKIP

	CMP R6,'.'
	BNE POWER_PELLET_ML
	BL INCREASE_SCORE_PM
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE POWER_PELLET_ML
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

POWER_PELLET_ML:
	CMP R6,'@'
	BNE M_L_NOSKIP
	LDR R7,=Ghostlocation
	LDR R9,=0
	STRH R9,[R7,#6]
	BL INCREASE_SCORE_PM_10
	LDR R7,=frightened
	LDR R9,=1
	STRB R9,[R7]
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE M_L_NOSKIP
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

M_L_NOSKIP:
	STRH R1,[R8]
	LDR R1,=2
	STRH R1,[R8,#6]
	LDR R1,=32
	STRB R1,[R5]

	B M_L_SKIP

M_L_SKIP:

	POP {R0-R11,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_LEFT_DRAW:

	PUSH {R0-R5,LR}

	LDR R5,=Pacmanloction

	ADD R5,R5,#2
	LDRH R0,[R5]
	ADD R5,R5,#2
	LDRH R3,[R5]

	ADD R1,R0,#11
	ADD R4,R3,#11

	BL PACMAN_DrawEmpty

	SUB R0,R0,#11
	SUB R1,R1,#11

	BL PACMAN_DrawPacman

	STRH R3,[R5]
	SUB R5,R5,#2
	STRH R0,[R5]

	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_UP:

	PUSH {R0-R11,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Pacmanloction
	LDR R11,=pellets_count

	LDRH R1,[R8]
	ADD R1,R1,#21
	ADD R5,R5,R1

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ M_U_SKIP

	CMP R6,'.'
	BNE POWER_PELLET_MU
	BL INCREASE_SCORE_PM
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE POWER_PELLET_MU
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

POWER_PELLET_MU:
	CMP R6,'@'
	BNE M_U_NOSKIP
	LDR R7,=Ghostlocation
	LDR R9,=0
	STRH R9,[R7,#6]
	BL INCREASE_SCORE_PM_10
	LDR R7,=frightened
	LDR R9,=1
	STRB R9,[R7]
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE M_U_NOSKIP
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

M_U_NOSKIP:
	STRH R1,[R8]
	LDR R1,=3
	STRH R1,[R8,#6]
	LDR R1,=32
	STRB R1,[R5]

	B M_U_SKIP

M_U_SKIP:

	POP {R0-R11,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_UP_DRAW:

	PUSH {R0-R5,LR}

	LDR R5,=Pacmanloction

	ADD R5,R5,#2
	LDRH R0,[R5]
	ADD R5,R5,#2
	LDRH R3,[R5]

	ADD R1,R0,#11
	ADD R4,R3,#11

	BL PACMAN_DrawEmpty

	ADD R3,R3,#11
	ADD R4,R4,#11

	BL PACMAN_DrawPacman

	STRH R3,[R5]
	SUB R5,R5,#2
	STRH R0,[R5]

	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_DOWN:

	PUSH {R0-R11,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Pacmanloction
	LDR R11,=pellets_count

	LDRH R1,[R8]
	SUB R1,R1,#21
	ADD R5,R5,R1

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ M_D_SKIP

	CMP R6,'.'
	BNE POWER_PELLET_MD
	BL INCREASE_SCORE_PM
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE POWER_PELLET_MD
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

POWER_PELLET_MD:
	CMP R6,'@'
	BNE M_D_NOSKIP
	LDR R7,=Ghostlocation
	LDR R9,=0
	STRH R9,[R7,#6]
	BL INCREASE_SCORE_PM_10
	LDR R7,=frightened
	LDR R9,=1
	STRB R9,[R7]
	LDRB R10,[R11]
	SUB R10,R10,#1
	STRB R10,[R11]
	CMP R10,#0
	BNE M_D_NOSKIP
	BL PACMAN_LEVEL_2_INIT
	POP {R0-R11,PC}

M_D_NOSKIP:
	STRH R1,[R8]
	LDR R1,=4
	STRH R1,[R8,#6]
	LDR R1,=32
	STRB R1,[R5]

	B M_D_SKIP

M_D_SKIP:

	POP {R0-R11,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_DOWN_DRAW:

	PUSH {R0-R5,LR}

	LDR R5,=Pacmanloction

	ADD R5,R5,#2
	LDRH R0,[R5]
	ADD R5,R5,#2
	LDRH R3,[R5]

	ADD R1,R0,#11
	ADD R4,R3,#11

	BL PACMAN_DrawEmpty

	SUB R3,R3,#11
	SUB R4,R4,#11

	BL PACMAN_DrawPacman

	STRH R3,[R5]
	SUB R5,R5,#2
	STRH R0,[R5]

	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_MOVE_DRAW:

	PUSH {R0-R12,LR}
	LDR R0,=Pacmanloction
	LDRH R1,[R0,#6]
	CMP R1,#1			@Move right
	BEQ PCMRD
	CMP R1,#2			@Move left
	BEQ PCMLD
	CMP R1,#3			@Move up
	BEQ PCMUD
	CMP R1,#4			@Move down
	BEQ PCMDD
	B PMMDEND
PCMRD:
	BL PACMAN_MOVE_RIGHT_DRAW
	B PMMDEND
PCMLD:
	BL PACMAN_MOVE_LEFT_DRAW
	B PMMDEND
PCMUD:
	BL PACMAN_MOVE_UP_DRAW
	B PMMDEND
PCMDD:
	BL PACMAN_MOVE_DOWN_DRAW
	B PMMDEND

PMMDEND:
	LDR R1,=0
	STRH R1,[R0,#6]
	POP {R0-R12,LR}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@ MOVE PACMAN @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Update Score @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
DISPLAY_SCORE_PACMAN:
@Draw Score of pacman
	PUSH {R0-R12,LR}


	@vertical dimensions of the scoreboard(Y)
	LDR R3,=220
	LDR R4,=239
	LDR R10,=PINK
	LDR R11,=BLACK
	@hundreds
	@horizontal dimensions of the hundreds digit in the scoreboard(X)
	LDR R0,=275
	LDR R1,=284
	BL TFT_SET_DRAWING_AREA
	LDR R0,=score
	LDRB R1,[R0]
	BL TFT_DISPLAY_DIGIT
	@tens
	@horizontal dimensions of the tens digit in the scoreboard(X)
	LDR R0,=288
	LDR R1,=297
	BL TFT_SET_DRAWING_AREA
	LDR R0,=score
	LDRB R1,[R0,#1]
	BL TFT_DISPLAY_DIGIT
	@units
	@horizontal dimensions of the ones digit in the scoreboard(X)
	LDR R0,=301
	LDR R1,=310
	BL TFT_SET_DRAWING_AREA
	LDR R0,=score
	LDRB R1,[R0,#2]
	BL TFT_DISPLAY_DIGIT


	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
INCREASE_SCORE_PM:
@ Increase score by 1
	PUSH {R0-R5,LR}

	LDR R0,=score

	LDRB R1,[R0,#2]
	ADD R1,R1,#1
	CMP R1,#10
	BEQ INCREASE_SCORE_PM_10_9
	STRB R1,[R0,#2]
	POP {R0-R5,PC}

INCREASE_SCORE_PM_10_9:
@ Increase score by 10

	LDR R1,=0
	STRB R1,[R0,#2]
	B INCREASE_SCORE_PM_10_9_1
INCREASE_SCORE_PM_10:
	PUSH {R0-R5,LR}
INCREASE_SCORE_PM_10_9_1:
	LDR R0,=score

	LDRB R1,[R0,#1]
	ADD R1,R1,#1
	CMP R1,#10
	BEQ INCREASE_SCORE_PM_100_99
	STRB R1,[R0,#1]
	POP {R0-R5,PC}

INCREASE_SCORE_PM_100_99:
@ Increase score by 100

	LDR R1,=0
	STRB R1,[R0,#1]
	B INCREASE_SCORE_PM_100_99_1
INCREASE_SCORE_PM_100:
	PUSH {R0-R5,LR}
INCREASE_SCORE_PM_100_99_1:
	LDR R0,=score

	LDRB R1,[R0]
	CMP R1,#9
	BEQ ICREASE_DONE_PM
	ADD R1,R1,#1
	STRB R1,[R0]
ICREASE_DONE_PM:
	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
DECREASE_SCORE_PM:
@ Decrease score by 10
	PUSH {R0-R5,LR}

	LDR R0,=score

	LDRB R1,[R0,#1]
	CMP R1,#0
	BEQ DEC_SCORE_PM_HUNDREDTH
	SUB R1,R1,#1
	STRB R1,[R0,#1]
	B DECREASE_DONE_PM

DEC_SCORE_PM_HUNDREDTH:
	LDRB R1,[R0]
	CMP R1,#0
	BEQ SET_TO_ZERO_DEC
	SUB R1,R1,#1
	STRB R1,[R0]
	LDR R2,=9
	STRB R2,[R0,#1]
	B DECREASE_DONE_PM

SET_TO_ZERO_DEC:
	LDR R1,=0
	STRB R1,[R0]
	STRB R1,[R0,#1]
	STRB R1,[R0,#2]
	B DECREASE_DONE_PM

DECREASE_DONE_PM:

	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Update Score @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@ PACMAN RESPAWNS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_RESPAWN:
	PUSH {R0-R8,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Pacmanloction

	LDRH R0,[R8,#2]
	LDRH R3,[R8,#4]
	ADD R1,R0,#11
	ADD R4,R3,#11
	BL PACMAN_DrawEmpty

	LDR R7,=PacmanInitialArray
	STRH R7,[R8]
	LDR R7,=PacmanInitialX
	STRH R7,[R8,#2]
	LDR R7,=PacmanInitialY
	STRH R7,[R8,#4]
	LDR R7,=0
	STRH R7,[R8,#6]					@Return pacman to initial position

	LDRH R0,[R8,#2]
	LDRH R3,[R8,#4]
	BL PACMAN_DrawPacman

	BL DECREASE_SCORE_PM			@Decrease Score by 10

	LDR R0,=lives
	LDRB R1,[R0]
	SUB R1,R1,#1					@Decrease lives by 1
	STRB R1,[R0]


	BL PACMAN_DRAW_LIVES

	CMP R1,#0
	BNE PACMAN_CONTINUE_GAME
	BL PACMAN_ENDGAME
	B PACMAN_CONTINUE_GAME
PACMAN_CONTINUE_GAME:

	POP {R0-R8,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
GHOST_RESPAWN:
	PUSH {R0-R8,LR}

	LDR R7,=PacmanByteMapping
	LDR R8,=Ghostlocation
	LDR R6,=delay_1_pacman
	LDR R1,=4
	STRB R1,[R6]

	LDRH R0,[R8,#2]
	LDRH R3,[R8,#4]
	ADD R1,R0,#11
	ADD R4,R3,#11

	BL PACMAN_DrawEmpty

	LDRH R6,[R8]

	LDRB R6,[R7,R6]

	CMP R6,'.'
	BNE NO_PT_Respawn @IF PREV LOC HAD A PELLET DRAW PELLET
	BL PACMAN_DrawPellet
	B NO_P_PT_Respawn


NO_PT_Respawn:
	CMP R6,'@'
	BNE NO_P_PT_Respawn @IF PREV LOC HAD A P_PELLET DRAW P_PELLET
	BL PACMAN_DrawPowerPellet
	B NO_P_PT_Respawn


NO_P_PT_Respawn:

	LDR R7,=GhostInitialArray
	STRH R7,[R8]
	LDR R7,=GhostInitialX
	STRH R7,[R8,#2]
	LDR R7,=GhostInitialY
	STRH R7,[R8,#4]
	LDR R7,=0
	STRH R7,[R8,#6]				@ Return Ghost to initial position

	LDRH R0,[R8,#2]
	LDRH R3,[R8,#4]
	ADD R1,R0,#11
	ADD R4,R3,#11
	BL PACMAN_DrawGhost


	LDR R6,=frightened

	LDRB R1,[R6]
	CMP R1,#0					@Check if ghost is frightened run
	LDR R1,=0
	STRB R1,[R6]
	BEQ Ghost_Won

	BL INCREASE_SCORE_PM_100	@ Increase score by 100
	@###Remaining: Delay ###
	POP {R0-R8,PC}

Ghost_Won:
	BL PACMAN_RESPAWN

	POP {R0-R8,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@ PACMAN RESPAWNS @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@ GHOSTS MOVE @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_GHOST_MOVE_RIGHT:

	PUSH {R0-R8,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Ghostlocation

	LDRH R1,[R8]
	ADD R1,R1,#1
	ADD R5,R5,R1

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ G_M_R_SKIP

	STRH R1,[R8]
	LDR R1,=1
	STRH R1,[R8,#6]

	B G_M_R_SKIP

G_M_R_SKIP:

	POP {R0-R8,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

PACMAN_GHOST_MOVE_LEFT:

	PUSH {R0-R8,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Ghostlocation

	LDRH R1,[R8]
	SUB R1,R1,#1
	ADD R5,R5,R1

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ G_M_L_SKIP

	STRH R1,[R8]
	LDR R1,=2
	STRH R1,[R8,#6]

	B G_M_L_SKIP

G_M_L_SKIP:

	POP {R0-R8,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_GHOST_MOVE_RIGHT_DRAW:

	PUSH {R0-R7,LR}

	LDR R6,=PacmanByteMapping
	LDR R5,=Ghostlocation

	LDRH R7,[R5]
	ADD R6,R6,R7 				@GHOST LOC
	SUB R6,R6,#1	 			@GHOST PREV LOC


	ADD R5,R5,#2
	LDRH R0,[R5] 				@x begin
	ADD R5,R5,#2
	LDRH R3,[R5] 				@y begin

	ADD R1,R0,#11 				@x end
	ADD R4,R3,#11 				@ y end

	BL PACMAN_DrawEmpty

	LDRB R6,[R6]

	CMP R6,'.'
	BNE NO_PT_R 				@IF PREV LOC HAD A PELLET DRAW PELLET
	BL PACMAN_DrawPellet

NO_PT_R:
	CMP R6,'@'
	BNE NO_P_PT_R 				@IF PREV LOC HAD A P_PELLET DRAW P_PELLET
	BL PACMAN_DrawPowerPellet


NO_P_PT_R:
	ADD R0,R0,#11 				@X BEGIN +11
	ADD R1,R1,#11 				@X END +11

	BL PACMAN_DrawGhost

	STRH R3,[R5] 				@store the intial y value of ghost loc
	SUB R5,R5,#2
	STRH R0,[R5] 				@store the intial x value of ghost loc

	POP {R0-R7,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_GHOST_MOVE_LEFT_DRAW:

	PUSH {R0-R7,LR}

	LDR R6,=PacmanByteMapping
	LDR R5,=Ghostlocation

	LDRH R7,[R5]
	ADD R6,R6,R7 @GHOST LOC
	ADD R6,R6,#1 @GHOST PREV LOC


	ADD R5,R5,#2
	LDRH R0,[R5] @x begin
	ADD R5,R5,#2
	LDRH R3,[R5] @y begin

	ADD R1,R0,#11 @x end
	ADD R4,R3,#11 @ y end

	BL PACMAN_DrawEmpty

	LDRB R6,[R6]

	CMP R6,'.'
	BNE NO_PT_L @IF PREV LOC HAD A PELLET DRAW PELLET
	BL PACMAN_DrawPellet

NO_PT_L:
	CMP R6,'@'
	BNE NO_P_PT_L @IF PREV LOC HAD A P_PELLET DRAW P_PELLET
	BL PACMAN_DrawPowerPellet


NO_P_PT_L:
	SUB R0,R0,#11 @X BEGIN -11
	SUB R1,R1,#11 @X END -11

	BL PACMAN_DrawGhost

	STRH R3,[R5] @store the intial y value of ghost loc
	SUB R5,R5,#2
	STRH R0,[R5] @store the intial x value of ghost loc

	POP {R0-R7,PC}
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

PACMAN_GHOST_MOVE_UP:

	PUSH {R0-R8,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Ghostlocation

	LDRH R1,[R8]
	ADD R1,R1,#21 @move ghost up
	ADD R5,R5,R1 @MOVE "CURSOR" TO GHOST NEW LOCATION

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ M_U_G_SKIP

	STRH R1,[R8] @STORE NEW GHOST LOCATION
	LDR R1,=3
	STRH R1,[R8,#6] @STORE MOVEMENT DIRECTION

	B M_U_G_SKIP

M_U_G_SKIP:

	POP {R0-R8,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_GHOST_MOVE_UP_DRAW:

	PUSH {R0-R7,LR}

	LDR R6,=PacmanByteMapping
	LDR R5,=Ghostlocation

	LDRH R7,[R5]
	ADD R6,R6,R7 @GHOST LOC
	SUB R6,R6,#21 @GHOST PREV LOC


	ADD R5,R5,#2
	LDRH R0,[R5] @x begin
	ADD R5,R5,#2
	LDRH R3,[R5] @y begin

	ADD R1,R0,#11 @x end
	ADD R4,R3,#11 @ y end

	BL PACMAN_DrawEmpty

	LDRB R6,[R6]

	CMP R6,'.'
	BNE NO_PT_U @IF PREV LOC HAD A PELLET DRAW PELLET
	BL PACMAN_DrawPellet


NO_PT_U:
	CMP R6,'@'
	BNE NO_P_PT_U @IF PREV LOC HAD A P_PELLET DRAW P_PELLET
	BL PACMAN_DrawPowerPellet


NO_P_PT_U:
	ADD R3,R3,#11 @Y BEGIN +11
	ADD R4,R4,#11 @Y END +11

	BL PACMAN_DrawGhost

	STRH R3,[R5] @store the intial y value of ghost loc
	SUB R5,R5,#2
	STRH R0,[R5] @store the intial x value of ghost loc

	POP {R0-R7,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

PACMAN_GHOST_MOVE_DOWN:

	PUSH {R0-R8,LR}

	LDR R5,=PacmanByteMapping
	LDR R8,=Ghostlocation

	LDRH R1,[R8]
	SUB R1,R1,#21 @move ghost DOWN
	ADD R5,R5,R1 @MOVE "CURSOR" TO GHOST NEW LOCATION

	LDRB R6,[R5]
	CMP R6,'#'
	BEQ M_D_G_SKIP

	STRH R1,[R8] @STORE NEW GHOST LOCATION
	LDR R1,=4
	STRH R1,[R8,#6] @STORE MOVEMENT DIRECTION

	B M_D_G_SKIP

M_D_G_SKIP:

	POP {R0-R8,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_GHOST_MOVE_DOWN_DRAW:

	PUSH {R0-R7,LR}

	LDR R6,=PacmanByteMapping
	LDR R5,=Ghostlocation

	LDRH R7,[R5]
	ADD R6,R6,R7 @GHOST LOC
	ADD R6,R6,#21 @GHOST PREV LOC


	ADD R5,R5,#2
	LDRH R0,[R5] @x begin
	ADD R5,R5,#2
	LDRH R3,[R5] @y begin

	ADD R1,R0,#11 @x end
	ADD R4,R3,#11 @ y end

	BL PACMAN_DrawEmpty

	LDRB R6,[R6]

	CMP R6,'.'
	BNE NO_PT_D @IF PREV LOC HAD A PELLET DRAW PELLET
	BL PACMAN_DrawPellet


NO_PT_D:
	CMP R6,'@'
	BNE NO_P_PT_D @IF PREV LOC HAD A P_PELLET DRAW P_PELLET
	BL PACMAN_DrawPowerPellet


NO_P_PT_D:
	SUB R3,R3,#11 @Y BEGIN -11
	SUB R4,R4,#11 @Y END -11

	BL PACMAN_DrawGhost

	STRH R3,[R5] @store the intial y value of ghost loc
	SUB R5,R5,#2
	STRH R0,[R5] @store the intial x value of ghost loc

	POP {R0-R7,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ GHOST CHASE @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

PACMAN_GHOST_CHASE:
	PUSH {R0-R12,LR}

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation
	LDR R1,=Pacmanloction
	LDR R12,=0 		@R12 WILL CONTAIN THE NEW DIRECTION, IF IT STAYS 0 THEN IT DIDNT MOVE
	LDR R11,=0		@R11 to stop infinite loop

	ADD R1,R1,#2	@PACMAN X
	ADD R2,R1,#2	@PACMAN Y

	ADD R3,R3,#2	@GHOST X
	ADD R4,R3,#2	@GHOST Y

	LDRH R7,[R1] @BA2ASEM EL SUB 3SHAN EL COMPILER MAY3AYATSH
	LDRH R8,[R3]
	LDRH R9,[R2]
	LDRH R10,[R4]

	SUB R5,R7,R8 @ X DIFFERENCE FROM GHOST TO PACMAN
	SUB R6,R9,R10 @ Y DIFFERENCE FROM GHOST TO PACMAN

	CMP R5,#0
	BGT RIGHT_CHECK
	BLT LEFT_CHECK
	BEQ COMP_Y
	B SKIP_CHASE

RIGHT_CHECK:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL ON ITS RIGHT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	ADD R7,R7,#1 @ MOVE THE GHOST TO THE RIGHT
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ COMP_Y

	@CHECK FOR IF PREVIOUS DIRECTION IS LEFT
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#2
	BEQ COMP_Y
	LDR R12,=1
	BL PACMAN_GHOST_MOVE_RIGHT
	B SKIP_CHASE

LEFT_CHECK:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL ON ITS LEFT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	SUB R7,R7,#1 @ MOVE THE GHOST TO THE LEFT
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ COMP_Y

	@CHECK FOR IF PREVIOUS DIRECTION IS RIGHT
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#1
	BEQ COMP_Y
	LDR R12,=2
	BL PACMAN_GHOST_MOVE_LEFT
	B SKIP_CHASE


COMP_Y:
	CMP R6,#0
	BGT UP_CHECK
	BLT DOWN_CHECK

UP_CHECK:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL OVER IT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	ADD R7,R7,#21 @ MOVE THE GHOST UP
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ NO_MOVE @MAWADETHASH NO MOVE 3SHAN MOMKEN T5OSH F INFINITE LOOP, LAZEM NO MOVE TEB2A F CHECK BTA3 DIREC WA7ED BS

	@CHECK FOR IF PREVIOUS DIRECTION IS DOWN
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#4
	BEQ NO_MOVE @MAWADETHASH NO MOVE 3SHAN MOMKEN T5OSH F INFINITE LOOP, LAZEM NO MOVE TEB2A F CHECK BTA3 DIREC WA7ED BS(A5ER WA7ED)
	LDR R12,=3
	BL PACMAN_GHOST_MOVE_UP
	B SKIP_CHASE

DOWN_CHECK:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL BELOW IT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	SUB R7,R7,#21 @ MOVE THE GHOST DOWN
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ NO_MOVE

	@CHECK FOR IF PREVIOUS DIRECTION IS UP
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#3
	BEQ NO_MOVE
	LDR R12,=4
	BL PACMAN_GHOST_MOVE_DOWN
	B SKIP_CHASE

	CMP R12,#0
	BEQ NO_MOVE
	BNE SKIP_CHASE

NO_MOVE:
	ADD R11,R11,#1
	CMP R11,#2
	BEQ LEFT_CHECK
	CMP R11,#3
	BEQ UP_CHECK
	CMP R11,#4
	BEQ NO_MOVE_1
	B RIGHT_CHECK

NO_MOVE_1:
	LDR R11,=0
	B DOWN_CHECK


SKIP_CHASE:

	LDR R3,=Ghostlocation
	LDR R1,=Pacmanloction
	LDRH R7,[R1,#2]
	LDRH R8,[R3,#2]
	LDRH R9,[R1,#4]
	LDRH R10,[R3,#4]

	CMP R7,R8
	BNE CHASE_END
	CMP R9,R10
	BNE CHASE_END
	BL GHOST_RESPAWN
	B CHASE_END
CHASE_END:

	POP {R0-R12,PC}


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ GHOST ESCAPE @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


PACMAN_GHOST_ESCAPE:
	PUSH {R0-R12,LR}

 	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation
	LDR R1,=Pacmanloction
	LDR R12,=0 @R12 WILL CONTAIN THE NEW DIRECTION, IF IT STAYS 0 THEN IT DIDNT MOVE
	LDR R11,=0

	ADD R1,R1,#2 @PACMAN X
	ADD R2,R1,#2 @PACMAN Y

	ADD R3,R3,#2 @GHOST X
	ADD R4,R3,#2 @GHOST Y

	LDRH R7,[R1] @BA2ASEM EL SUB 3SHAN EL COMPILER MAY3AYATSH
	LDRH R8,[R3]
	LDRH R9,[R2]
	LDRH R10,[R4]

	SUB R5,R7,R8 @ X DIFFERENCE FROM GHOST TO PACMAN
	SUB R6,R9,R10 @ Y DIFFERENCE FROM GHOST TO PACMAN

	CMP R5,#0
	BGT LEFT_CHECK_ESC
	BLT RIGHT_CHECK_ESC
	BEQ COMP_Y_ESC
	B SKIP_ESC

RIGHT_CHECK_ESC:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL ON ITS RIGHT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	ADD R7,R7,#1 @ MOVE THE GHOST TO THE RIGHT
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ COMP_Y_ESC

	@CHECK FOR IF PREVIOUS DIRECTION IS LEFT
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#2
	BEQ COMP_Y_ESC
	LDR R12,=1
	BL PACMAN_GHOST_MOVE_RIGHT
	B SKIP_ESC

LEFT_CHECK_ESC:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL ON ITS LEFT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	SUB R7,R7,#1 @ MOVE THE GHOST TO THE LEFT
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ COMP_Y_ESC

	@CHECK FOR IF PREVIOUS DIRECTION IS RIGHT
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#1
	BEQ COMP_Y_ESC
	LDR R12,=2
	BL PACMAN_GHOST_MOVE_LEFT
	B SKIP_ESC


COMP_Y_ESC:
	CMP R6,#0
	BGT DOWN_CHECK_ESC
	BLT UP_CHECK_ESC

UP_CHECK_ESC:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL OVER IT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	ADD R7,R7,#21 @ MOVE THE GHOST UP
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ DOWN_CHECK_ESC @MAWADETHASH NO MOVE 3SHAN MOMKEN T5OSH F INFINITE LOOP, LAZEM NO MOVE TEB2A F CHECK BTA3 DIREC WA7ED BS

	@CHECK FOR IF PREVIOUS DIRECTION IS DOWN
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#4
	BEQ DOWN_CHECK_ESC @MAWADETHASH NO MOVE 3SHAN MOMKEN T5OSH F INFINITE LOOP, LAZEM NO MOVE TEB2A F CHECK BTA3 DIREC WA7ED BS(A5ER WA7ED)
	LDR R12,=3
	BL PACMAN_GHOST_MOVE_UP
	B SKIP_ESC

DOWN_CHECK_ESC:

	LDR R0,=PacmanByteMapping
	LDR R3,=Ghostlocation

	@CHECK FOR WALL BELOW IT
	LDRH R7,[R3] @ PUT GHOST MAP LOCATION IN  R7
	SUB R7,R7,#21 @ MOVE THE GHOST DOWN
	ADD R0,R0,R7 @CURSOR ON GHOST LOCATION
	LDRB R8,[R0] @ VALUE OF THE BLOCK THE CURSOR IS STANDING ON
	CMP R8,'#'
	BEQ NO_MOVE_ESC

	@CHECK FOR IF PREVIOUS DIRECTION IS UP
	ADD R3,R3,#6
	LDRH R8,[R3] @PLACE PREV DIRECTION IN R8
	CMP R8,#3
	BEQ NO_MOVE_ESC
	LDR R12,=4
	BL PACMAN_GHOST_MOVE_DOWN
	B SKIP_ESC

	CMP R12,#0
	BEQ NO_MOVE_ESC
	BNE SKIP_ESC

NO_MOVE_ESC:
	ADD R11,R11,#1
	CMP R11,#2
	BEQ LEFT_CHECK_ESC
	CMP R11,#3
	BEQ UP_CHECK_ESC
	CMP R11,#4
	BEQ NO_MOVE_ESC_1
	B RIGHT_CHECK_ESC
NO_MOVE_ESC_1:
	LDR R11,=0
	B DOWN_CHECK_ESC


SKIP_ESC:

	LDR R3,=Ghostlocation
	LDR R1,=Pacmanloction
	LDRH R7,[R1,#2]
	LDRH R8,[R3,#2]
	LDRH R9,[R1,#4]
	LDRH R10,[R3,#4]

	CMP R7,R8
	BNE ESC_END
	CMP R9,R10
	BNE CHASE_END
	BL GHOST_RESPAWN
	B ESC_END
ESC_END:


	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

GHOST_MOVE_CHASE_ESCAPE:
	PUSH {R0-R5,LR}

	LDR R7,=frightened
	LDRB R7,[R7]
	CMP R7,#1
	BEQ ESCAPE_PACMAN_GHOST_INIT
	BL PACMAN_GHOST_CHASE
	POP {R0-R5,PC}
ESCAPE_PACMAN_GHOST_INIT:
	BL PACMAN_GHOST_ESCAPE

	POP {R0-R5,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
GHOST_MOVE_DRAW:

	PUSH {R0-R12,LR}
	LDR R1,=Ghostlocation
	LDRH R2,[R1,#6]
	CMP R2,#1
	BEQ GMRD
	CMP R2,#2
	BEQ GMLD
	CMP R2,#3
	BEQ GMUD
	CMP R2,#4
	BEQ GMDD
	B GMDEND
GMRD:
	BL PACMAN_GHOST_MOVE_RIGHT_DRAW
	B GMDEND
GMLD:
	BL PACMAN_GHOST_MOVE_LEFT_DRAW
	B GMDEND
GMUD:
	BL PACMAN_GHOST_MOVE_UP_DRAW
	B GMDEND
GMDD:
	BL PACMAN_GHOST_MOVE_DOWN_DRAW
	B GMDEND

GMDEND:

	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ GHOST MOVE @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ GAME RESET @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_RESET:
	PUSH {R0-R12,LR}

	@LDR r5,=pellets_count
	@LDR r6,=Map1Pellets
	@STRB r6,[r5]

	LDR r5,=PacmanByteMapping
	LDR r6,=PacmanByteMapping_INIT_1
	LDR r7,=0
	LDR R8,=441
PACMAN_INIT_MAP_1:
	LDRB R4,[R6]
	STRB R4,[R5]
	ADD R7,R7,#1
	ADD R6,R6,#1
	ADD R5,R5,#1
	CMP R7,R8
	BLE PACMAN_INIT_MAP_1

	BL PACMAN_INIT

	LDR R1,=frightened
	LDR R0,=0
	STRB R0,[R1]
	LDR R0,=15
	STRB R0,[R1,#1]

	LDR R1,=score
	LDR R0,=0
	STRB R0,[R1]
	LDR R0,=0
	STRB R0,[R1,#1]
	LDR R0,=0
	STRB R0,[R1,#2]

	LDR R1,=lives
	LDR R0,=3
	STRB R0,[R1]


	LDR R1,=Ghostlocation
	LDR R0,=199
	STRH R0,[R1]
	LDR R0,=111
	STRH R0,[R1,#2]
	LDR R0,=104
	STRH R0,[R1,#4]
	LDR R0,=0
	STRH R0,[R1,#6]


	LDR R1,=Pacmanloction
	LDR R0,=325
	STRH R0,[R1]
	LDR R0,=111
	STRH R0,[R1,#2]
	LDR R0,=170
	STRH R0,[R1,#4]
	LDR R0,=0
	STRH R0,[R1,#6]

	BL PACMAN_DRAW_LIVES

	LDR R3,=5
	LDR R4,=25
	LDR R10,=PINK
	LDR R11,=BLACK
	LDR R0,=275
	LDR R1,=284
	BL TFT_SET_DRAWING_AREA
	LDR R1,=1
	BL TFT_DISPLAY_DIGIT

	LDR R1,=delay_1_pacman
	LDRB R0,=4
	STRB R0,[R1]

	LDR R2,=1000000
	BL TIM2_START_IT

	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LEVEL 2 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
PACMAN_LEVEL_2_INIT:
	PUSH {R0-R12,LR}

	LDR r5,=pellets_count
	LDR r6,=Map2Pellets
	STRB r6,[r5]

	LDR r5,=PacmanByteMapping
	LDR r6,=PacmanByteMapping_INIT_2
	LDR r7,=0
	LDR R8,=441
PACMAN_INIT_MAP_2:
	LDRB R4,[R6]
	STRB R4,[R5]
	ADD R7,R7,#1
	ADD R6,R6,#1
	ADD R5,R5,#1
	CMP R7,R8
	BLE PACMAN_INIT_MAP_2

	BL PACMAN_INIT

	LDR R1,=frightened
	LDR R0,=0
	STRB R0,[R1]
	LDR R0,=15
	STRB R0,[R1,#1]

	LDR R1,=score
	LDR R0,=0
	STRB R0,[R1]
	LDR R0,=0
	STRB R0,[R1,#1]
	LDR R0,=0
	STRB R0,[R1,#2]


	LDR R1,=Ghostlocation
	LDR R0,=199
	STRH R0,[R1]
	LDR R0,=111
	STRH R0,[R1,#2]
	LDR R0,=104
	STRH R0,[R1,#4]
	LDR R0,=0
	STRH R0,[R1,#6]


	LDR R1,=Pacmanloction
	LDR R0,=325
	STRH R0,[R1]
	LDR R0,=111
	STRH R0,[R1,#2]
	LDR R0,=170
	STRH R0,[R1,#4]
	LDR R0,=0
	STRH R0,[R1,#6]

	BL PACMAN_DRAW_LIVES

	LDR R3,=5
	LDR R4,=25
	LDR R10,=PINK
	LDR R11,=BLACK
	LDR R0,=275
	LDR R1,=284
	BL TFT_SET_DRAWING_AREA
	LDR R1,=2
	BL TFT_DISPLAY_DIGIT

	LDR R2,=500000
	BL TIM2_START_IT

	LDR R1,=delay_1_pacman
	LDRB R0,=4
	STRB R0,[R1]

	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@width 231, height 231, block 11*11,padding (bottom:5, top:4)
PACMAN_ENDGAME:
	PUSH {R0-R12,LR}
	LDR R10,=BLACK
	LDR R0,=0
	LDR R1,=320
	LDR R3,=0
	LDR R4,=240
	BL TFT_DRAW_RECTANGLE

@ Draw the pacman gameover

	LDR r5,=PacmanByteMapping_GAMEOVER
   	LDR r0,=1
	LDR r1,=12
	LDR r3,=5
	LDR r4,=16
ReadAndDisplay_GAMEOVER:
	LDRB r6,[r5]

	BL SELECT_BLOCK

	ADD r5,r5,#1
	ADD r0,r0,#11
	ADD r1,r1,#11
	CMP r0,#232
	BNE ReadAndDisplay_GAMEOVER
	LDR r0,=1
	LDR r1,=12
	ADD r3,r3,#11
	ADD r4,r4,#11
	CMP r3,#236
	BNE ReadAndDisplay_GAMEOVER

	BL DISPLAY_SCORE_PACMAN


	LDR R0,=TIM2_DIER
	LDR R1,=0
	STR R1,[R0]



	POP {R0-R12,PC}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



    .section .data
@IF FREIGHTENED = 1
frightened:
.byte 0,8

delay_1_pacman:
.byte 4,0

pellets_count:
.byte 4

score:
.byte 0,0,0

lives:
.byte 3

@ 1: location in array , 2: x-coord on screen, 3: y-coord on screen, 4: direction of movement
Ghostlocation:
.hword 199,111,104,0 @msh mota2aked 8er mn awel value

Pacmanloction:
.hword 325,111,170,0

PacmanByteMapping:
.byte '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '@', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '@', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '.', '#', '.', '#', '#', '#', '#', '#', '#', '#', '.', '#', '#', '.', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '#', '.', '.', '.', '#', '#', '#', '.', '.', '.', '#', '.', '.', '.', '.', '#'
.byte '#', '#', '#', '#', '.', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '.', '#', '#', '#', '#'
.byte ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', '#', ' ', '#', '#', '#', '#', '#', '#', '#', ' ', '#', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', ' ', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', ' ', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' '
.byte '#', '#', '#', '#', '.', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '.', '#', '#', '#', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '.', '#'
.byte '#', '@', '.', '#', '.', '.', '.', '.', '.', '.', ' ', '.', '.', '.', '.', '.', '.', '#', '.', '@', '#'
.byte '#', '#', '.', '#', '.', '#', '.', '#', '#', '#', '#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '#'
.byte '#', '.', '.', '.', '.', '#', '.', '.', '.', '#', '#', '#', '.', '.', '.', '#', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '#', '#', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'


PacmanByteMapping_INIT_1:
.byte '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '@', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '@', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '.', '#', '.', '#', '#', '#', '#', '#', '#', '#', '.', '#', '#', '.', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '#', '.', '.', '.', '#', '#', '#', '.', '.', '.', '#', '.', '.', '.', '.', '#'
.byte '#', '#', '#', '#', '.', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '.', '#', '#', '#', '#'
.byte ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '.', '#', ' ', ' ', ' '
.byte ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', '.', '#', ' ', ' ', ' '
.byte '#', '#', '#', '#', '.', '#', '#', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', '.', '#', '#', '#', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '.', '#'
.byte '#', '@', '.', '#', '.', '.', '.', '.', '.', '.', ' ', '.', '.', '.', '.', '.', '.', '#', '.', '@', '#'
.byte '#', '#', '.', '#', '.', '#', '.', '#', '#', '#', '#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '#'
.byte '#', '.', '.', '.', '.', '#', '.', '.', '.', '#', '#', '#', '.', '.', '.', '#', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '#', '#', '#', '#', '#', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'


PacmanByteMapping_INIT_2:
.byte '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'
.byte '#', '.', '.', '.', '.', '.', '.', '.', '#', '@', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '.', '#', '#', '#', '#', '#', '.', '#'
.byte '#', '.', '#', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#'
.byte '#', '.', '.', '.', '#', '.', '#', '#', '#', '.', '#', '.', '#', '#', '#', '.', '#', '.', '.', '.', '#'
.byte '#', '#', '#', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#', '#', '#'
.byte '#', '.', '.', '.', '#', '#', '#', '.', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '.', '.', '#'
.byte '#', '.', '#', '.', '.', '.', '.', '.', ' ', ' ', ' ', ' ', ' ', '.', '.', '.', '.', '.', '#', '.', '#'
.byte '#', '.', '#', '#', '#', '.', '#', '.', '#', '#', ' ', '#', '#', '.', '#', '.', '#', '#', '#', '.', '#'
.byte '#', '@', '.', '.', '.', '.', '#', '.', ' ', ' ', ' ', ' ', ' ', '.', '#', '.', '.', '.', '.', '@', '#'
.byte '#', '.', '#', '.', '#', '#', '#', '.', '#', '#', '#', '#', '#', '.', '#', '#', '#', '.', '#', '.', '#'
.byte '#', '.', '#', '.', '.', '.', '.', '.', ' ', ' ', ' ', ' ', ' ', '.', '.', '.', '.', '.', '#', '.', '#'
.byte '#', '.', '#', '#', '#', '.', '#', '#', '#', ' ', '#', ' ', '#', '#', '#', '.', '#', '#', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '.', '#', '.', ' ', ' ', '#', ' ', ' ', '.', '#', '.', '.', '.', '.', '.', '#'
.byte '#', '#', '#', '.', '#', '.', '#', '.', '#', '#', '#', '#', '#', '.', '#', '.', '#', '.', '#', '#', '#'
.byte '#', '.', '.', '.', '#', '.', '.', '.', '.', ' ', ' ', ' ', '.', '.', '.', '.', '#', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#', '.', '#', '#', '#', '.', '#', '#', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '.', '#', '.', ' ', ' ', '#', ' ', ' ', '.', '#', '.', '.', '.', '.', '.', '#'
.byte '#', '.', '#', '#', '#', '.', '#', '.', '#', '#', '#', '#', '#', '.', '#', '.', '#', '#', '#', '.', '#'
.byte '#', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '@', '.', '.', '#', '.', '.', '.', '.', '.', '#'
.byte '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'


PacmanByteMapping_GAMEOVER:
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', '#', '#', '#', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', '#', '#', ' ', '#', ' ', '#', ' '
.byte ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' '
.byte ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', ' ', ' ', '#', '#', '#', ' ', '#', '#', ' ', ' '
.byte ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' '
.byte ' ', ' ', '#', '#', '#', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', '#', '#', ' ', '#', '#', '#', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', '#', '#', '#', '#', ' ', '#', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', '#', '#'
.byte ' ', ' ', '#', ' ', ' ', '#', ' ', '#', ' ', ' ', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', ' ', ' '
.byte ' ', ' ', '#', ' ', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', ' ', '#', ' ', '#', ' ', '#', '#', '#'
.byte ' ', ' ', '#', ' ', ' ', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', '#', ' ', '#', '#', ' ', '#', ' ', ' '
.byte ' ', ' ', '#', '#', '#', '#', ' ', '#', '#', '#', '#', ' ', '#', ' ', ' ', ' ', '#', ' ', '#', '#', '#'
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
.byte ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '



CHOOSEAGAME:
.hword 0x0000, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0x0000, 0x4a49, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x0000, 0x0000, 0x2945, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2945, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2945, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce79, 0x0861, 0x0861, 0x0861, 0x4a69, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0861, 0x0861, 0x0861, 0x2965, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0861, 0x0861, 0x0861, 0x2965, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0861, 0x0861, 0x0861, 0x2965, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x1082, 0x0861, 0x0861, 0x10a2, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x2104, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0x0861, 0x0861, 0x0861,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf79e, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0000, 0x0841, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0841, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18c3, 0xef7d, 0xf79e, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xdedb, 0x1082, 0x0861, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0020, 0x0020, 0x0020, 0x4228, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0020, 0x0020, 0x0020, 0x0841, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0020, 0x0020, 0x0861, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x18c3, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xce59, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xd69a, 0x0000, 0x0000, 0x0000, 0x2104, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0x0000, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0020, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0x10a2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xf7be, 0xef7d, 0xef7d, 0xef7d, 0xf79e, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffdf, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xdedb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x10a2, 0x1082, 0x0000, 0x0000, 0x0000, 0x0000, 0x1082, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0xef7d, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef5d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffdf, 0xffdf, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0x0841, 0x4a69, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb5b6, 0x0841, 0x0020, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x0000, 0x0841, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0020, 0x0000, 0x0000, 0x0841, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0841, 0x0000, 0x0000, 0x0841, 0x2965, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0841, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x1082, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0841, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x10a2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x1082, 0x0841, 0x0000, 0x0000, 0x0841, 0x10a2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x1082, 0x0841, 0x0000, 0x0000, 0xffff, 0xffff, 0x10a2, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0x0841, 0xe71c, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff,
.hword 0x0000, 0x4228, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0000, 0x0000, 0x0000, 0x39e7, 0xffff, 0xffff, 0xffff, 0xce79, 0x0000, 0x0000, 0x0000, 0x4208, 0xffff, 0xffff, 0xffff, 0xce59, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x18e3, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xef7d, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf79e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0861, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0841, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe71c, 0xffff, 0x0861, 0x0000, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf7be, 0xffff, 0xffff, 0xffff
PACMANNOTSELECTED:
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf643, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcd40, 0xc520, 0xc520, 0xcd40, 0xcd40, 0xcd40, 0xcd40, 0xcd40, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xe600, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee43, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0x1080, 0x18a0, 0xf663, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0x1080, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee00, 0xee00, 0xee00, 0xee00, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe600, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe600, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0820, 0xee00, 0xee00, 0xee00, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xee00, 0xee00, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe600, 0xe600, 0xcd20, 0xee43, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe600, 0x0000, 0x0000, 0xe603, 0xe603, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xddc0, 0xdda0, 0x0000, 0x0000, 0x0840, 0x1080, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x0860, 0x0840, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0xe603, 0xe603, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xddc0, 0xddc0, 0x1080, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcd20, 0xc520, 0xcd20, 0xee43, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe600, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe5e0, 0x0000, 0x0000, 0x0000, 0x0000, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe5e0, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0xee23, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0x1060, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcd20, 0xc520, 0xc520, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe600, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe5e0, 0x0000, 0x0000, 0x0000, 0x0000, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe5e0, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0xee23, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0x1060, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xcd40, 0xe600, 0xee00, 0xee00, 0xc520, 0xc520, 0xc520, 0xc520, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe600, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xee43, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xee00, 0xe5e0, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe600, 0xe600, 0xe600, 0xe600, 0xf643, 0xcd40, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0xee23, 0xf663, 0xf663, 0xf643, 0xcd40, 0xe5e0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xee20, 0xee00, 0x1060, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xcd40, 0xe600, 0xee00, 0xc520, 0xcd40, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xe5e0, 0x0840, 0x0840, 0x0000, 0x0000, 0xe603, 0xee23, 0xf663, 0xcd20, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xddc0, 0xdda0, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe600, 0xcd20, 0xcd20, 0xbce0, 0xbce0, 0xbce0, 0xee23, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0xdde3, 0xee23, 0xf663, 0xcd40, 0xc520, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xe5c0, 0xddc0, 0x1060, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xcd40, 0xe5e0, 0xcd40, 0xcd20, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xc520, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0020, 0xf663, 0xf663, 0xc520, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xee23, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcd20, 0xf663, 0xf643, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xee00, 0xee00, 0xcd20, 0xf643, 0xee20, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe603, 0xf663, 0xcd40, 0xc520, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xcd40, 0xc520, 0xc520, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xc520, 0xc520, 0xee00, 0x0000, 0x0000, 0x0000, 0x0020, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xee23, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xc520, 0xc520, 0xc520, 0xcd20, 0xf663, 0xf643, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xc520, 0xc520, 0xf663, 0xf663, 0xee20, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe603, 0xf663, 0xf663, 0xf663, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xcd40, 0xc520, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xee00, 0xee00, 0xee00, 0x0000, 0x0020, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xee23, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf643, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xcd20, 0xee00, 0xc520, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe603, 0xf663, 0xf663, 0xf663, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0860, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xcd20, 0xcd20, 0xee00, 0x0000, 0x0020, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xee23, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf643, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xcd20, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe603, 0xf663, 0xf663, 0xf663, 0xc520, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0860, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee43, 0xee43, 0xc520, 0xee00, 0xd580, 0xd560, 0x1080, 0x10a0, 0xf663, 0xf663, 0xee43, 0xcd20, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xee20, 0xdde3, 0xdde3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xee43, 0xee43, 0xf663, 0xf663, 0x20e0, 0x1080, 0xe5e3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1080, 0x1080, 0xe5e3, 0xf663, 0xee43, 0xc520, 0xee00, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x18a0, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee20, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x18c0, 0x1080, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xcd40, 0xcd40, 0xc500, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xc520, 0xcd40, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0840, 0x0000, 0xe5e3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xc520, 0xcd40, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0820, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee43, 0xee43, 0xc520, 0xc500, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xee23, 0xc520, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18c0, 0x18c0, 0xcd40, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee20, 0xee20, 0xcd40, 0xcd40, 0xcd40, 0xc520, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x20e0, 0x18c0, 0x0000, 0x0000, 0x18a0, 0x18c0, 0xdde3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xee43, 0xcd20, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0820, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xee20, 0xee20,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xc520, 0xc500, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf643, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe600, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xe5e0, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xddc3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xf643, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0820, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee20, 0xc520, 0xc500, 0x0000, 0x0000, 0x1080, 0x1080, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1080, 0x18a0, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x1080, 0x1080, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xddc3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1080, 0x1080, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x2920, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x2920, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xe600, 0xddc0, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xe5e0, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xddc3, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0xf663, 0xf663, 0x10a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee20, 0xee00, 0xee00, 0x20c0, 0x18c0, 0x0000, 0x0000, 0x0000, 0x0000, 0x18c0, 0x2900, 0xf663, 0xee43, 0x20c0, 0x18c0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18c0, 0x18c0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x18c0, 0x18c0, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0x20e0, 0x20c0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18c0, 0x20c0, 0xee43, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18c0, 0x20c0, 0xee23, 0xf663, 0x2920, 0x20c0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0x3140, 0x20c0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0xf663, 0xee43, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee23, 0xf663, 0x1060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdde3, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee20, 0xee20, 0xee00, 0xee00, 0x2100, 0x2100, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2900, 0x2100, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2100, 0x2100, 0x2100, 0x2100, 0x2100, 0x2100, 0x2100, 0x2100, 0x2100, 0x2100, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2100, 0x2900, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdda0, 0xee20, 0xee20, 0xee20, 0xee00, 0xee00,
.hword 0xf663, 0xf663, 0xf663, 0xf663, 0xee00, 0xee00, 0xee00, 0xee00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xf663, 0xf663, 0xf663, 0xf663, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee43, 0xf663, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xe5e0, 0xee00, 0xf663, 0xf663, 0x1080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xd580, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00
PACMANSELECTED:
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xab60, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xdda0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xe600, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0x2100, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xd420, 0xab60, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xede0, 0xede0, 0xede0, 0xede0, 0xede0, 0xede0, 0xee00, 0xee00, 0xee00, 0xdda0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x1880, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xf643, 0xe5e3, 0x0840, 0x0840, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xede0, 0xede0, 0xede0, 0xede0, 0xede0, 0xede0, 0xede0, 0xee00, 0xee00, 0xee00, 0xee00, 0x2100, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xc500, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xee00, 0xee00, 0xee00, 0xdda0, 0x0000, 0x0000, 0x0000, 0x0840, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xee00, 0xee00, 0x2100, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcd40, 0xcc40, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xc500, 0x0000, 0x20a0, 0xc3e0, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xee00, 0xee00, 0xe5e0, 0xd560, 0x0000, 0x0000, 0x0820, 0x1060, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0820, 0x0020, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0xbbc0, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xe5e0, 0xe5e0, 0x20e0, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcd40, 0xc520, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xee00, 0xdda0, 0x0000, 0x0000, 0x0000, 0x0840, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0x2100, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcd40, 0xc520, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc00, 0xd420, 0xee00, 0xdda0, 0x0000, 0x0000, 0x0020, 0x1060, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc00, 0xcc00, 0xc3c0, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc00, 0xcc00, 0xe5c0, 0xee00, 0x2100, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xc4e0, 0xe5e0, 0xee00, 0xee00, 0xcd40, 0xc520, 0xc520, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xede0, 0xcc00, 0xd420, 0xee00, 0xdda0, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xf643, 0xbce0, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xe5c0, 0xee00, 0x2100, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xc4e0, 0xe5e0, 0xee00, 0xcd40, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc40, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xede0, 0xcc00, 0xd420, 0xee00, 0xdda0, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xc520, 0xc520, 0xc520, 0xc520, 0xc520, 0xe603, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xc500, 0xc520, 0xc520, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xe5a0, 0xee00, 0x2100, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xc4e0, 0xe5e0, 0xcd40, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xe5e0, 0xcd40, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc40, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00, 0xede0, 0xcc00, 0xcc00, 0xcc00, 0xc3c0, 0x0000, 0x0000, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xee00, 0xee00, 0xc520, 0xcc20, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xc500, 0xc520, 0xc520, 0xe5e0, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xc4e0, 0xc520, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xe5e0, 0xc520, 0xcd40, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xede0, 0xcc00, 0xcc00, 0xcc00, 0xc3c0, 0x0000, 0x0000, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xc520, 0xc520, 0xc520, 0xcd20, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xc520, 0xc520, 0xcc20, 0xcc00, 0xee00, 0xee00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xc500, 0xe5e0, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xc4e0, 0xc520, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xcd40, 0xee00, 0xee00, 0xc500, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xcd40, 0xee00, 0xee00, 0xee00, 0xee00, 0xede0, 0xcc00, 0xcc00, 0xcc00, 0xc3c0, 0x0000, 0x0000, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd440, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcd20, 0xee00, 0xc520, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xc500, 0xe5e0, 0xee00, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xc520, 0xc520, 0xcd40, 0xc500, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xc520, 0xcd40, 0xee00, 0xee00, 0xee00, 0xede0, 0xcc00, 0xcc00, 0xcc00, 0xc3c0, 0x0000, 0x0000, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd440, 0xf663, 0xf663, 0xf663, 0xf663, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xc520, 0xc520, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xee00, 0xee00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xc500, 0xc520, 0xe5e0, 0xee00, 0xee00, 0xee00, 0xd460, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xcd40, 0xee00, 0xee00, 0xc500, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc40, 0xcd40, 0xee00, 0xe5c0, 0xcc20, 0xcc00, 0xcc00, 0xbbc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xcc20, 0xd440, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0xcc00, 0xcc00, 0xcc20, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xc500, 0xe5e0, 0xee00, 0xd460, 0xcc20, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20c0, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xc520, 0xc520, 0xc520, 0xa440, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc40, 0xc520, 0xcd40, 0xe5c0, 0xcc00, 0xcc00, 0xcc00, 0xbbc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1060, 0xf663, 0xf643, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd420, 0xf663, 0xe603, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xc500, 0xc520, 0xe5e0, 0xd460, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc40, 0xc520, 0xa440, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xc500, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xbbc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x1060, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xbbc0, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc20, 0xc500, 0xcc40, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc40, 0xc520, 0xa440, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xbbc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0860, 0xe5e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc20, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xe5e0, 0xc520, 0xa440, 0x0000, 0x0000, 0x0820, 0x28c0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3c0, 0x0820, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x1060, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0820, 0x0820, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x0820, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x28c0, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x28c0, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xee00, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xbbc0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0860, 0xe5e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc3e0, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xede0, 0xee00, 0xee00, 0xc500, 0x0840, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x28e0, 0xcc00, 0xab60, 0x0840, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x1860, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0840, 0x0820, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0840, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x0840, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x0840, 0xb380, 0xcc00, 0x28c0, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0x28e0, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xee00, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20a0, 0xcc00, 0xab60, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0xe5a0, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xede0, 0xede0, 0xee00, 0xc500, 0x1060, 0x0860, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x0840, 0x0840, 0x0840, 0x0840, 0x0840, 0x0840, 0x0840, 0x0840, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0840, 0x0840, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xbce0, 0xede0, 0xede0, 0xede0, 0xee00, 0xee00,
.hword 0xcc00, 0xcc00, 0xcc00, 0xd460, 0xee00, 0xee00, 0xee00, 0xc500, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0xcc00, 0xcc00, 0xcc00, 0xc3e0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcbe0, 0xcc00, 0xcc00, 0xcc00, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xab60, 0xcc00, 0xcc00, 0xcc00, 0x20a0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xc500, 0xee00, 0xee00, 0xee00, 0xee00, 0xee00
PONGNOTSELECTED:
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0x0000, 0x0000, 0x9d96, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a2, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0x0000, 0x0000, 0x9d96, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a2, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5255, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb659, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0x9d96, 0xb659, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb659, 0xb659,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5255, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5255, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb659, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5255, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x9d76, 0xb659, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0020, 0x9d96, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0020, 0x0020, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb659, 0xb659, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb659, 0xb659, 0xb659, 0xb659, 0xb659,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0841, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x1082, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0841, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb659, 0xb659, 0x1082, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0882, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb659, 0xb659, 0xb659, 0xb659, 0xb659, 0xb659, 0xb679, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb659, 0xb659, 0x0882, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xb639, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x18c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xb639, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0842, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0xb659, 0xb659, 0x18c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xb639, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xb639, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0xa596, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x5275, 0x5275, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0x9d96, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0x0000, 0x0000, 0x9d96, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a2, 0x0000,
.hword 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5b7, 0xb679, 0xb679, 0xb679, 0x10c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xa5d7, 0xb679, 0xb679, 0xb679, 0x10a3, 0x0000, 0x0000, 0x0000, 0x9d96, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x10a2, 0x0000
PONGSELECTED:
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0843, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x41f1, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d0, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0863, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x41f1, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d0, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x2145, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5296, 0x5296, 0x5296, 0x5296, 0x5275, 0x5275, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1904, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1904, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1, 0x20d1, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x18d0,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1, 0x18ae, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0023, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20d1, 0x20d1, 0x20d1, 0x18d0,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5d9, 0x5275, 0x5275, 0x5275, 0x4a13, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x0000, 0x0000, 0x1904, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x0000, 0x0000, 0x1904, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x5275, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x0000, 0x0000, 0x0000, 0x0041, 0x2165, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20d1, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18af, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xa5b9, 0x5275, 0x4212, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d1,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x1904, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x9535, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0022, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d0, 0x0000, 0x0000,
.hword 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x18cf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0xb679, 0x9535, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x20f2, 0x20f2, 0x20f2, 0x18d0, 0x0000, 0x0000, 0x0000, 0x0002, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20f2, 0x20d0, 0x0000, 0x0000
MAINARROW:
.hword 0xffff, 0xdefb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xe73c, 0x4208, 0x39c7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xdefb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xe71c, 0x2104, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2104, 0x2104, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xe71c, 0x2104, 0x2104, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xffff, 0xffff, 0xdefb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xe71c, 0x2104, 0x18e3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
.hword 0xffff, 0xdefb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000




@IDENTIFY WHICH GAME WE ARE ON | 0 --> STILL SELECTING | 1 --> PACMAN | 2 --> PONG
GAMEFLAG: .byte 0
@IDENTIFY WHICH GAME WE ARE ON | 1 --> PACMAN | 2 --> PONG
GAMESELECT: .byte 1


@OUR STICK POSITION IN Y
PONG_OSP:  .byte 110
@FLAG OF MOVING FOR OUR STICK | 0 --> DIDN'T MOVE | 1 --> MOVED
PONG_OSPM: .byte 0
@ENEMY STICK POSITION IN Y
PONG_ESP:  .byte 110
@FLAG OF MOVING FOR ENEMY STICK | 0 --> DIDN'T MOVE | 1 --> MOVED
PONG_ESPM: .byte 0
@BALL X POSITION
PONG_BXP:  .hword 160
@BALL Y POSITION
PONG_BYP:  .byte 110
@BALL PERVIOUS X POSITION
PONG_BPXP:	.hword 160
@BALL PERVIOUS Y POSITION
PONG_BPYP:	.byte 110
@BALL X DIRECTION | 0 --> LEFT | 1 --> RIGHT
PONG_BXD:  .byte 0
@BALL Y DIRECTION | 0 --> DOWN | 1 --> UP
PONG_BYD:  .byte 0
@FLAG OF MOVING FOR BALL | 0 --> DIDN'T MOVE | 1 --> MOVED
PONG_BPM:  .byte 0
@PONG SCORE
PONG_SCORE: .byte 0,0,0
@PONG FREEZE POWERUP
PONG_FREEZE: .byte 255
@PONG EXPAND POWERUP
PONG_EXPAND: .byte 255
@PONG POWER SCORE | IF 25 GIVES POWER THEN SET TO 0
PONG_POWERSCORE: .byte 0
@PONG GIVE POWER | 0 --> NO POWERUPS | 1 --> FREEZE | 2 --> EXPAND OUR STICK
PONG_POWER: .byte 0
@PONG BALL SPEED
PONG_BALLSPEED: .word 200000
